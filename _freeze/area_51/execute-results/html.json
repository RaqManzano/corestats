{
  "hash": "ea4b19527f1a464d70bf37f26db3c524",
  "result": {
    "markdown": "---\ntitle: area_51\n---\n\ninfo\n\n\n\n``` {.python .cell-code}\noystercatcher_py = pd.read_csv(\"data/CS2-oystercatcher-feeding.csv\")\n```\n\n\n``` {.python .cell-code}\n# define the model\nmodel = smf.ols(formula= \"feeding ~ C(site)\", data = oystercatcher_py)\n# fit the model\nlm_oystercatcher_py = model.fit()\n```\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndgplots(lm_oystercatcher_py)\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n![](area_51_files/figure-html/cell-5-output-1.png){}\n:::\n:::\n\n\n``` {.python .cell-code}\nstate_py = pd.read_csv(\"data/CS3-statedata.csv\")\n```\n\n\n``` {.python .cell-code}\n# define the model\nmodel = smf.ols(formula= \"population ~ area + murder\", data = state_py)\n# fit the model\nlm_state = model.fit()\n```\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndgplots(lm_state)\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n![](area_51_files/figure-html/cell-8-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "area_51_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}