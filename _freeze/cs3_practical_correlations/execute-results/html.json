{
  "hash": "fd2b2cdf731aefa00c34b24ddc1b0f12",
  "result": {
    "markdown": "---\ntitle: \"Correlations\"\nformat:\n  html:\n    toc: true\n    include-after-body:\n      - sync-tabs.html\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n::: callout-tip\n## Learning outcomes\n\n**Questions**\n\n- What are correlation coefficients?\n- What kind of correlation coefficients are there and when do I use them?\n\n**Objectives**\n\n- Be able to calculate correlation coefficients in R or Python\n- Use visual tools to explore correlations between variables\n- Know the limitations of correlation coefficients\n:::\n\n## Libraries and functions\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: panel-tabset\n## tidyverse\n\n| Libraries               | Description                                                                                                       |\n|:---------------------|:-------------------------------------------------|\n| `library(tidyverse)`    | A collection of R packages designed for data science.                                                             |\n| `library(rstatix)`      | Converts base R stats functions to a tidyverse-friendly format. Also contains extra functionality that we'll use. |\n| `library(ggResidpanel)` | Creates diagnostic plots using `ggplot2`.|\n|`library(corrr)` | A package for exploring correlations in R.\n\n| Library        | Function              | Description                  |\n|:---------------|:----------------------|:-----------------------------|\n| `ggResidpanel` | `resid_panel()`       | Creates diagnostic plots.    |\n\n## R\n\n## Python\n:::\n:::\n\n## Purpose and aim\nCorrelation refers to the relationship of two variables (or data sets) to one another. Two data sets are said to be correlated if they are not independent from one another. Correlations can be useful because they can indicate if a predictive relationship may exist. However just because two data sets are correlated does not mean that they are causally related.\n\n## Data and hypotheses\nWe will use the `USArrests` data set for this example. This rather bleak data set contains statistics in arrests per 100,000 residents for assault, murder and robbery in each of the 50 US states in 1973, alongside the proportion of the population who lived in urban areas at that time. `USArrests` is a data frame with 50 observations of five variables: `state`, `murder`, `assault`, `urban_pop` and `robbery`.\n\nWe will be using these data to explore if there are correlations between these variables.\n\nThe data are stored in the file `data/CS3-usarrests.csv`.\n\n## Load and visualise the data\nFirst, we load the data:\n\n::: {.panel-tabset}\n## tidyverse\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the data\nUSArrests <- read_csv(\"data/CS3-usarrests.csv\")\n\n# have a look at the data\nUSArrests\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 5\n   state       murder assault urban_pop robbery\n   <chr>        <dbl>   <dbl>     <dbl>   <dbl>\n 1 Alabama       13.2     236        58    21.2\n 2 Alaska        10       263        48    44.5\n 3 Arizona        8.1     294        80    31  \n 4 Arkansas       8.8     190        50    19.5\n 5 California     9       276        91    40.6\n 6 Colorado       7.9     204        78    38.7\n 7 Connecticut    3.3     110        77    11.1\n 8 Delaware       5.9     238        72    15.8\n 9 Florida       15.4     335        80    31.9\n10 Georgia       17.4     211        60    25.8\n# … with 40 more rows\n```\n:::\n:::\n\n\nWe can create a visual overview of the potential correlations that might exist between the variables. For this, we use the `corrr` package.\n\nMake sure to install the package, if you haven't done so already:\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"corrr\")\n```\n:::\n\n\nand then load it:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrr)\n```\n:::\n\n\nWe can only calculate correlations between numerical variables, so we have to deselect the `state` variable. Next, we calculate the correlations with `correlate()` and plot the result using `rplot()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create correlation graph\nUSArrests %>% \n    select(-state) %>% \n    correlate() %>%\n    rplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nCorrelation method: 'pearson'\nMissing treated using: 'pairwise.complete.obs'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type noquote. Defaulting to continuous.\n```\n:::\n\n::: {.cell-output-display}\n![](cs3_practical_correlations_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe output tells us that the correlation method used is `pearson` (see below) and that only paired observations without missing values are taken into account.\n\nOn the right there is a scale of the strength of the correlation.\n\n## R\nFirst, we load the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the data\nUSArrests_r <- read.csv(\"data/CS3-usarrests.csv\")\n\n# and have a look at the data\nhead(USArrests_r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       state murder assault urban_pop robbery\n1    Alabama   13.2     236        58    21.2\n2     Alaska   10.0     263        48    44.5\n3    Arizona    8.1     294        80    31.0\n4   Arkansas    8.8     190        50    19.5\n5 California    9.0     276        91    40.6\n6   Colorado    7.9     204        78    38.7\n```\n:::\n:::\n\n\nWe can only calculate correlations between numerical variables, so we have to deselect the `state` variable.\n\nWe can load the data with an extra argument, `row.names = 1`. This will instruct R to load the data but use first column (`state`) as row names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the data\nUSArrests_r <- read.csv(\"data/CS3-usarrests.csv\", row.names = 1)\n\n# have a look at the data\nhead(USArrests_r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           murder assault urban_pop robbery\nAlabama      13.2     236        58    21.2\nAlaska       10.0     263        48    44.5\nArizona       8.1     294        80    31.0\nArkansas      8.8     190        50    19.5\nCalifornia    9.0     276        91    40.6\nColorado      7.9     204        78    38.7\n```\n:::\n:::\n\n\nWe can visualise the data with the `pairs()` function. This function creates a matrix of scatter plots that we can use to look for correlations. Every combination of variables appears twice (e.g. `murder` vs `assault` is the same as `assault` vs `murder`), so we use the `lower.panel = NULL` argument to only visualise the unique combinations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create matrix of scatter plots\npairs(USArrests_r, lower.panel = NULL)\n```\n\n::: {.cell-output-display}\n![](cs3_practical_correlations_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n \n## Python\n:::\n\nFrom visual inspection of the scatter plots we can see that there appears to be a slight positive correlation between all pairs of variables, although this may be very weak in some cases (`murder` and `urban_pop` for example).\n\n:::callout-note\nPearson's r (as this quantity is also known) is a measure of the linear correlation between two variables. It has a value between -1 and +1, where +1 means a perfect positive correlation, -1 means a perfect negative correlation and 0 means no correlation at all.\n:::\n",
    "supporting": [
      "cs3_practical_correlations_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}