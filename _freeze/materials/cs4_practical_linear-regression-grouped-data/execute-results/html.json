{
  "hash": "8d10367d61581aba327ddef7bbcb61a0",
  "result": {
    "markdown": "---\ntitle: \"Linear regression with grouped data\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n::: callout-tip\n## Learning outcomes\n\n**Questions**\n\n- How do I perform a linear regression on grouped data?\n\n**Objectives**\n\n- Be able to perform a linear regression on grouped data in R\n- Calculate the linear regression for individual groups and visualise these with the data\n- Understand and be able to create equations of the regression line\n- Be able to deal with interactions in this context\n:::\n\n## Libraries and functions\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n### Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# A collection of R packages designed for data science\nlibrary(tidyverse)\n\n# Converts stats functions to a tidyverse-friendly format\nlibrary(rstatix)\n\n# Creates diagnostic plots using ggplot2\nlibrary(ggResidpanel)\n\n# Helper functions for tidying data\nlibrary(broom)\n```\n:::\n\n\n### Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gets underlying data out of model object\nbroom::augment()\n\n# Creates diagnostic plots\nggResidpanel::resid_panel()\n```\n:::\n\n\n## R\n\n### Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creates a subset of the data\nsubset()\n```\n:::\n\n\n\n## Python\n:::\n:::\n\n## Purpose and aim\nA linear regression analysis with grouped data is used when we have one categorical predictor variable (or factor), and one continuous predictor variable. The response variable must still be continuous however.\n\nFor example in an experiment that looks at light intensity in woodland, how is light intensity (continuous: lux) affected by the height at which the measurement is taken, recorded as depth measured from the top of the canopy (continuous: metres) and by the type of woodland (categorical: Conifer or Broad leaf).\n\n\n::: {.cell show_col_types='false'}\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWhen analysing these type of data we want to know:\n\n1.\tIs there a difference between the groups?\n2.\tDoes the continuous predictor variable affect the continuous response variable (does canopy depth affect measured light intensity?)\n3.\tIs there any interaction between the two predictor variables? Here an interaction would display itself as a difference in the slopes of the regression lines for each group, so for example perhaps the conifer data set has a significantly steeper line than the broad leaf woodland data set.\n\nIn this case, no interaction means that the regression lines will have the same slope.\nEssentially the analysis is identical to two-way ANOVA.\n\n1. We will plot the data and visually inspect it.\n2. We will test for an interaction and if it doesn’t exist then:\n    a. We can test to see if either predictor variable has an effect (i.e. do the regression lines have different intercepts? and is the common gradient significantly different from zero?)\n    \nWe will first consider how to visualise the data before then carrying out an appropriate statistical test.\n\n## Data and hypotheses\nThe data are stored in `data/CS4-treelight.csv`. This is a data frame with four variables; `id`, `light`, `depth` and `species`. `light` is the continuous response variable, `depth` is the continuous predictor variable and `species` is the categorical predictor variable.\n\nRead in the data and inspect them:\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in the data\ntreelight <- read_csv(\"data/CS4-treelight.csv\")\n\n# inspect the data\ntreelight\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 4\n      id light depth species\n   <dbl> <dbl> <dbl> <chr>  \n 1     1 4106.  1    Conifer\n 2     2 4934.  1.75 Conifer\n 3     3 4417.  2.5  Conifer\n 4     4 4529.  3.25 Conifer\n 5     5 3443.  4    Conifer\n 6     6 4640.  4.75 Conifer\n 7     7 3082.  5.5  Conifer\n 8     8 2368.  6.25 Conifer\n 9     9 2777.  7    Conifer\n10    10 2419.  7.75 Conifer\n# … with 13 more rows\n```\n:::\n:::\n\n\n## R\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in the data\ntreelight_r <- read.csv(\"data/CS4-treelight.csv\")\n\n# inspect the data\nhead(treelight_r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id    light depth species\n1  1 4105.646  1.00 Conifer\n2  2 4933.925  1.75 Conifer\n3  3 4416.527  2.50 Conifer\n4  4 4528.618  3.25 Conifer\n5  5 3442.610  4.00 Conifer\n6  6 4640.297  4.75 Conifer\n```\n:::\n:::\n\n\n## Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# load the data\ntreelight_py = pd.read_csv(\"data/CS4-treelight.csv\")\n\n# and have a look\ntreelight_py.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   id        light  depth  species\n0   1  4105.646110   1.00  Conifer\n1   2  4933.925144   1.75  Conifer\n2   3  4416.527443   2.50  Conifer\n3   4  4528.618186   3.25  Conifer\n4   5  3442.610306   4.00  Conifer\n```\n:::\n:::\n\n:::\n\n## Summarise and visualise\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot the data\ntreelight %>% \n  ggplot(aes(x = depth, y = light, colour = species)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Dark2\") +\n  labs(x = \"Depth (m)\",\n       y = \"Light intensity (lux)\")\n```\n\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(light ~ depth,\n     data = treelight_r)\n```\n\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nThis plots all of the points in the data set on the same window. To visualise the data by `species`, we can use the `col` argument. This only takes data in the form of factors (categorical variables with inherit order), so we need to temporarily conver the `species` column to a factor with `col = factor(species)`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(light ~ depth,\n     data = treelight_r,\n     col = factor(species))\n```\n\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# plot the data\n(\n  ggplot(treelight_py,\n    aes(x = \"depth\", y = \"light\", colour = \"species\")) +\n    geom_point() +\n    scale_color_brewer(type = \"qual\", palette = \"Dark2\") +\n    labs(x = \"Depth (m)\",\n       y = \"Light intensity (lux)\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<ggplot: (393168890)>\n```\n:::\n\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-13-1.png){width=614}\n:::\n:::\n\n\n:::\n\nIt looks like there is a slight negative correlation between depth and light intensity, with light intensity reducing as the canopy depth increases. It would be useful to plot the regression lines in this plot.\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot the data\ntreelight %>% \n  ggplot(aes(x = depth, y = light, colour = species)) +\n  geom_point() +\n  # add regression lines\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_color_brewer(palette = \"Dark2\") +\n  labs(x = \"Depth (m)\",\n       y = \"Light intensity (lux)\")\n```\n\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-14-3.png){width=672}\n:::\n:::\n\n\n## R\n\nUnfortunately there is not an easy way in base R to add regression line to individual groups. To do this, we need to do three things:\n\n1. Split the data by `species`\n2. Create a linear model for each group\n3. Determine the regression line (or line of best fit) for each group and then add this to the plot\n\nThe `subset` function creates subsets of data frames. The first argument is the original data frame, and the subset argument is a logical expression that defines which observations (rows) should be extracted. The logical expression must be enclosed in parentheses. In the first case it says (`Species == \"Conifer\"`). This tells R to only extract the rows of the original data frame which have `Conifer` in the species variable column. Ditto for `Broadleaf`.\n\nFirst, we subset the data:\n\n::: {.cell}\n\n```{.r .cell-code}\n# subset the conifers\nconLight <- subset(treelight_r,\n                   subset = (species == \"Conifer\"))\n\n# subset the broad leaf\nbroLight <- subset(treelight_r,\n                   subset = (species == \"Broadleaf\"))\n```\n:::\n\n\nThen we create a linear model for each subgroup:\n\n::: {.cell}\n\n```{.r .cell-code}\n# linear regression for Broadleaf\nlm_broadleaf <- lm(light ~ depth,\n                   data = broLight)\n\n# linear regression for Conifer\nlm_conifer <- lm(light ~ depth,\n                 data = conLight)\n```\n:::\n\n\nAnd plot it all together:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(light ~ depth,\n     data = treelight_r,\n     col = factor(species))\n\n# add the Broadleaf linear regression\nabline(lm_broadleaf, col = \"black\")\n\n# add the Conifer linear regression\nabline(lm_conifer, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Python\n\n::: {.cell}\n\n```{.python .cell-code}\n# plot the data\n(\nggplot(treelight_py,\n       aes(x = \"depth\", y = \"light\", colour = \"species\")) +\n  geom_point() +\n  # add regression lines\n  geom_smooth(method = \"lm\", se = False) +\n  scale_color_brewer(type = \"qual\", palette = \"Dark2\") +\n  labs(x = \"Depth (m)\",\n       y = \"Light intensity (lux)\")\n)\n```\n\n::: {.cell-output-display}\n![](cs4_practical_linear-regression-grouped-data_files/figure-html/unnamed-chunk-18-1.png){width=614}\n:::\n:::\n\n:::\n\nLooking at this plot, there doesn’t appear to be any significant interaction between the woodland type (`Broadleaf` and `Conifer`) and the depth at which light measurements were taken (`depth`) on the amount of light intensity getting through the canopy as the gradients of the two lines appear to be very similar. There does appear to be a noticeable slope to both lines and both lines look as though they have very different intercepts. All of this suggests that there isn’t any interaction but that both `depth` and `species` have a significant effect on `light` independently.\n\n## Implement and interpret the test\nIn this case we're going to implement the test before checking the assumptions (I know, let's live a little!). You'll find out why soon...\n\nWe can test for a possible interaction more formally:\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(lm(light ~ depth * species,\n         data = treelight))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: light\n              Df   Sum Sq  Mean Sq  F value    Pr(>F)    \ndepth          1 30812910 30812910 107.8154 2.861e-09 ***\nspecies        1 51029543 51029543 178.5541 4.128e-11 ***\ndepth:species  1   218138   218138   0.7633    0.3932    \nResiduals     19  5430069   285793                       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nRemember that `depth * species` is a shorthand way of writing the full set of `depth + species + depth:species` terms in R _i.e._ both main effects and the interaction effect.\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(lm(light ~ depth * species,\n         data = treelight))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: light\n              Df   Sum Sq  Mean Sq  F value    Pr(>F)    \ndepth          1 30812910 30812910 107.8154 2.861e-09 ***\nspecies        1 51029543 51029543 178.5541 4.128e-11 ***\ndepth:species  1   218138   218138   0.7633    0.3932    \nResiduals     19  5430069   285793                       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nRemember that `depth * species` is a shorthand way of writing the full set of `depth + species + depth:species` terms in R _i.e._ both main effects and the interaction effect.\n\n## Python\n\nUnfortunately there is no clear way of defining interaction models in pingouin. So we're resorting back to `statsmodels`, just like we had to when we performed the Shapiro-Wilk test on the residuals.\n\nIf you haven't loaded `statsmodels` yet, run the following:\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\n```\n:::\n\n\nNext, we create a linear model and get the `.fit()`:\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# create a linear model\nmodel = smf.ols(formula= \"light ~ depth * C(species)\", data = treelight_py)\n# and get the fitted parameters of the model\nlm_treelight_py = model.fit()\n```\n:::\n\n\nTo get the relevant values, we can print the summary of the model fit. This gives us a rather huge table. Don't be too daunted by it - there is a logic to the madness and for now we're mainly interested in the `P>|t|` column.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(lm_treelight_py.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                  light   R-squared:                       0.938\nModel:                            OLS   Adj. R-squared:                  0.928\nMethod:                 Least Squares   F-statistic:                     95.71\nDate:                Tue, 25 Oct 2022   Prob (F-statistic):           1.19e-11\nTime:                        16:25:38   Log-Likelihood:                -174.91\nNo. Observations:                  23   AIC:                             357.8\nDf Residuals:                      19   BIC:                             362.4\nDf Model:                           3                                         \nCovariance Type:            nonrobust                                         \n===============================================================================================\n                                  coef    std err          t      P>|t|      [0.025      0.975]\n-----------------------------------------------------------------------------------------------\nIntercept                    7798.5655    298.623     26.115      0.000    7173.541    8423.590\nC(species)[T.Conifer]       -2784.5833    442.274     -6.296      0.000   -3710.274   -1858.893\ndepth                        -221.1256     61.802     -3.578      0.002    -350.478     -91.773\ndepth:C(species)[T.Conifer]   -71.0357     81.309     -0.874      0.393    -241.217      99.145\n==============================================================================\nOmnibus:                        1.435   Durbin-Watson:                   2.176\nProb(Omnibus):                  0.488   Jarque-Bera (JB):                1.269\nSkew:                           0.444   Prob(JB):                        0.530\nKurtosis:                       2.267   Cond. No.                         31.8\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n```\n:::\n:::\n\n\n:::\n\nAs with two-way ANOVA we have a row in the table for each of the different effects. At this point we are particularly interested in the p-values. We need to look at the interaction first.\n\nThe interaction term between `depth` and `species` has a p-value of 0.393 (which is bigger than 0.05) and so we can conclude that the interaction between `depth` and `species` isn’t significant. As such we can now consider whether each of the predictor variables independently has an effect.\n\nBoth `depth` and `species` have very small p-values (2.86x10<sup>-9</sup> and 4.13x10 <sup>-11</sup>) and so we can conclude that they do have a significant effect on `light`.\n\nThis means that the two regression lines should have the same non-zero slope, but different intercepts. We would now like to know what those values are.\n\n### Finding intercept values\n\nFinding the intercept values is not entirely straightforward and there is some deciphering required to get this right.\n\nFor a simple straight line such as the linear regression for the conifer data by itself, the output is relatively straightforward:\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter the Conifer data and fit a linear model\ntreelight %>% \n  filter(species == \"Conifer\") %>% \n  lm(light ~ depth, data = .)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = light ~ depth, data = .)\n\nCoefficients:\n(Intercept)        depth  \n     5014.0       -292.2  \n```\n:::\n:::\n\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(light ~ depth,\n   data = conLight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = light ~ depth, data = conLight)\n\nCoefficients:\n(Intercept)        depth  \n     5014.0       -292.2  \n```\n:::\n:::\n\n## Python\n\nWe have two options to obtain the intercept for conifers only. We could subset our data, keeping only the conifer values. We could then create a linear model of those data, and obtain the relevant intercept.\n\nHowever, since we already created a model for the entire data set (including the interaction term) and printed the summary of that, we can actually derive the intercept value with the information that we've got.\n\nIn the `coef` table of the summary there are several values:\n\n```\nIntercept                      7798.5655\nC(species)[T.Conifer]         -2784.5833\ndepth                         -221.1256\ndepth:C(species)[T.Conifer]   -71.0357\n```\n\nThis tells us that the _overall_ intercept value for the model with the interaction term is 7798.5655. The `C(species)[T.Conifer]` term means that, to go from this overall intercept value _to the intercept for conifer_, we need to add -2784.5833.\n\nDoing the maths gives us an intercept of $7798.5655 + (-2784.5833) = 5014$ if we round this.\n\nEqually, if we want to get the coefficient for `depth`, then we take the reference value of -221.1256 and add the value next to `depth:C(species)[T.Conifer]` to it. This gives us $-221.1256 + (-71.0357) = -292.2$ if we round it.\n\n:::\n\nWe can interpret this as meaning that the intercept of the regression line is 5014 and the coefficient of the depth variable (the number in front of it in the equation) is -292.2.\n\nSo, the equation of the regression line for the conifer data is given by:\n\n\\begin{equation}\nlight = 5014 + -292.2 \\times depth\n\\end{equation} \n\nThis means that for every extra 1 m of depth of forest canopy we lose 292.2 lux of light.\n\nWhen we looked at the full data set, we found that interaction wasn’t important. This means that we will have a model with two distinct intercepts but only a single slope (that’s what you get for a linear regression without any interaction), so we need to calculate that specific combination. We do this is as follows:\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(light ~ depth + species,\n   data = treelight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = light ~ depth + species, data = treelight)\n\nCoefficients:\n   (Intercept)           depth  speciesConifer  \n        7962.0          -262.2         -3113.0  \n```\n:::\n:::\n\n\nNotice the `+` symbol in the argument, as opposed to the `*` symbol used earlier. This means that we are explicitly _not_ including an interaction term in this fit, and consequently we are forcing R to calculate the equation of lines which have the same gradient.\n\nIdeally we would like R to give us two equations, one for each forest type, so four parameters in total.\nUnfortunately, R is parsimonious and doesn’t do that. Instead R gives you three coefficients, and these require a bit of interpretation.\n\nThe first two numbers that R returns (underneath `Intercept` and `depth`) are the exact intercept and slope coefficients for one of the lines (in this case they correspond to the data for `Broadleaf` woodlands).\n\nFor the coefficients belonging to the other line, R uses these first two coefficients as baseline values and expresses the other coefficients relative to these ones. R also doesn’t tell you explicitly which group it is using as its baseline reference group! (Did I mention that R can be very helpful at times 😉?)\n\nSo, how to decipher the above output?\n\nFirst, I need to work out which group has been used as the baseline.\n\n* It will be the group that comes first alphabetically, so it should be `Broadleaf`\n* The other way to check would be to look and see which group is not mentioned in the above table. `Conifer` is mentioned (in the `SpeciesConifer` heading) and so again the baseline group is `Broadleaf.`\n\nThis means that the intercept value and `depth` coefficient correspond to the `Broadleaf` group and as a result I know what the equation of one of my lines is:\n\nBroadleaf:\n\n\\begin{equation}\nlight = 7962 + -262.2 \\times depth\n\\end{equation} \n\nIn this example we know that the gradient is the same for both lines (because we explicitly asked to exclude an interaction), so all I need to do is find the intercept value for the `Conifer` group. Unfortunately, the final value given underneath `SpeciesConifer` does not give me the intercept for `Conifer`, instead it tells me the difference between the `Conifer` group intercept and the baseline intercept i.e. the equation for the regression line for conifer woodland is given by:\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(light ~ depth + species,\n   data = treelight_r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = light ~ depth + species, data = treelight_r)\n\nCoefficients:\n   (Intercept)           depth  speciesConifer  \n        7962.0          -262.2         -3113.0  \n```\n:::\n:::\n\n\nNotice the `+` symbol in the argument, as opposed to the `*` symbol used earlier. This means that we are explicitly _not_ including an interaction term in this fit, and consequently we are forcing R to calculate the equation of lines which have the same gradient.\n\nIdeally we would like R to give us two equations, one for each forest type, so four parameters in total.\nUnfortunately, R is parsimonious and doesn’t do that. Instead R gives you three coefficients, and these require a bit of interpretation.\n\nThe first two numbers that R returns (underneath `Intercept` and `depth`) are the exact intercept and slope coefficients for one of the lines (in this case they correspond to the data for `Broadleaf` woodlands).\n\nFor the coefficients belonging to the other line, R uses these first two coefficients as baseline values and expresses the other coefficients relative to these ones. R also doesn’t tell you explicitly which group it is using as its baseline reference group! (Did I mention that R can be very helpful at times 😉?)\n\nSo, how to decipher the above output?\n\nFirst, I need to work out which group has been used as the baseline.\n\n* It will be the group that comes first alphabetically, so it should be `Broadleaf`\n* The other way to check would be to look and see which group is not mentioned in the above table. `Conifer` is mentioned (in the `SpeciesConifer` heading) and so again the baseline group is `Broadleaf.`\n\nThis means that the intercept value and `depth` coefficient correspond to the `Broadleaf` group and as a result I know what the equation of one of my lines is:\n\nBroadleaf:\n\n\\begin{equation}\nlight = 7962 + -262.2 \\times depth\n\\end{equation} \n\nIn this example we know that the gradient is the same for both lines (because we explicitly asked to exclude an interaction), so all I need to do is find the intercept value for the `Conifer` group. Unfortunately, the final value given underneath `SpeciesConifer` does not give me the intercept for `Conifer`, instead it tells me the difference between the `Conifer` group intercept and the baseline intercept i.e. the equation for the regression line for conifer woodland is given by:\n\n## Python\n\nThe way we obtain the values for the model without the interaction is very similar to what we did for the conifer data. We need to update our model first, to remove the interaction:\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# create a linear model\nmodel = smf.ols(formula= \"light ~ depth + C(species)\", data = treelight_py)\n# and get the fitted parameters of the model\nlm_treelight_add_py = model.fit()\n```\n:::\n\n\nNotice the `+` symbol in the argument, as opposed to the `*` symbol used earlier. This means that we are explicitly _not_ including an interaction term in this fit, and consequently we are forcing Python to calculate the equation of lines which have the same gradient.\n\nWe can get the relevant coefficients as follows:\n\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(lm_treelight_add_py.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                  light   R-squared:                       0.935\nModel:                            OLS   Adj. R-squared:                  0.929\nMethod:                 Least Squares   F-statistic:                     144.9\nDate:                Tue, 25 Oct 2022   Prob (F-statistic):           1.26e-12\nTime:                        16:25:39   Log-Likelihood:                -175.37\nNo. Observations:                  23   AIC:                             356.7\nDf Residuals:                      20   BIC:                             360.1\nDf Model:                           2                                         \nCovariance Type:            nonrobust                                         \n=========================================================================================\n                            coef    std err          t      P>|t|      [0.025      0.975]\n-----------------------------------------------------------------------------------------\nIntercept              7962.0316    231.356     34.415      0.000    7479.431    8444.633\nC(species)[T.Conifer] -3113.0265    231.586    -13.442      0.000   -3596.106   -2629.947\ndepth                  -262.1656     39.922     -6.567      0.000    -345.441    -178.891\n==============================================================================\nOmnibus:                        2.068   Durbin-Watson:                   2.272\nProb(Omnibus):                  0.356   Jarque-Bera (JB):                1.677\nSkew:                           0.633   Prob(JB):                        0.432\nKurtosis:                       2.618   Cond. No.                         13.9\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n```\n:::\n:::\n\n\nAgain, I need to work out which group has been used as the baseline.\n\n* It will be the group that comes first alphabetically, so it should be `Broadleaf`\n* The other way to check would be to look and see which group is not mentioned in the above table. `Conifer` is mentioned (in the `C(species)[T.Conifer]` heading) and so again the baseline group is `Broadleaf.`\n\nThis means that the intercept value and `depth` coefficient correspond to the `Broadleaf` group and as a result I know what the equation of one of my lines is:\n\nBroadleaf:\n\n\\begin{equation}\nlight = 7962 + -262.2 \\times depth\n\\end{equation} \n\nIn this example we know that the gradient is the same for both lines (because we explicitly asked to exclude an interaction), so all I need to do is find the intercept value for the `Conifer` group. Unfortunately, the final value given in `C(species)[T.Conifer]` does not give me the intercept for `Conifer`, instead it tells me the difference between the `Conifer` group intercept and the baseline intercept i.e. the equation for the regression line for conifer woodland is given by:\n:::\n\n\\begin{equation}\nlight = (7962 + -3113) + -262.2 \\times depth\n\\end{equation} \n\n\\begin{equation}\nlight = 4829 + -262.2 \\times depth\n\\end{equation} \n\n\n\n## Exercise\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n## R\n## Python\n:::\n:::\n\n## Key points\n\n::: callout-note\n-\n-\n-\n:::\n",
    "supporting": [
      "cs4_practical_linear-regression-grouped-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}