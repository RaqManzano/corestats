[{},{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"sessions intended enable perform core data analysis techniques appropriately confidently using R.6 lecture-practicals6 lecture-practicalsOngoing formative assessment exercisesOngoing formative assessment exercisesNo formal assessmentNo formal assessmentNo mathematical derivationsNo mathematical derivationsNo pen paper calculationsNo pen paper calculationsThey ‚Äúmindlessly use stats program‚Äù course!","code":""},{"path":"index.html","id":"core-aims","chapter":"1 Overview","heading":"1.1 Core aims","text":"know presented arbitrary dataset e.g.Know data analysis techniques availableKnow ones allowableBe able carry understand results","code":""},{"path":"index.html","id":"core-topics","chapter":"1 Overview","heading":"1.2 Core topics","text":"Simple hypothesis testingCategorical predictor variablesContinuous predictorsTwo predictor variablesMultiple predictor variablesPower analysis","code":""},{"path":"index.html","id":"practicals","chapter":"1 Overview","heading":"1.3 Practicals","text":"practical document divided various sections. section explanatory text help understand going ‚Äôre trying achieve.\nmay list commands relevant section displayed boxes like :Conditional operatorsTo set filtering conditions, use following relational operators:> greater >= greater equal < less <= less equal == equal != different %% contained combine conditions, use following logical operators:& | ","code":""},{"path":"index.html","id":"index-datasets","chapter":"1 Overview","heading":"1.4 Datasets","text":"course uses various data sets. easiest way accessing creating R-project RStudio. download data folder right-clicking link Save ‚Ä¶. Next unzip file copy working directory. data accessible via <working-directory-name>/data/tidy.","code":""},{},{"path":"introduction.html","id":"introduction","chapter":"2 Introduction","heading":"2 Introduction","text":"","code":""},{"path":"introduction.html","id":"cs1-one-sample-tests","chapter":"2 Introduction","heading":"2.1 One-sample tests","text":"","code":""},{"path":"introduction.html","id":"objectives-one-sample","chapter":"2 Introduction","heading":"2.1.1 Objectives (one-sample)","text":"QuestionsWhen perform one-sample test?one-sample tests assumptions?interpret present results tests?ObjectivesSet hypothesis single sample continuous dataBe able summarise visualise data RUnderstand assess underlying assumptions testsPerform one-sample t-test Wilcoxon signed-rank test RKnow test appropriate whenBe able interpret report results","code":""},{"path":"introduction.html","id":"purpose-and-aim","chapter":"2 Introduction","heading":"2.1.2 Purpose and aim","text":"tests used single sample continuous data. used find sample came parent distribution given mean (median). essentially boils finding sample mean (median) ‚Äúclose enough‚Äù hypothesised parent population mean (median).\n, figure , use tests see probability sample ten points comes distribution plotted .e.¬†population mean 20 mm.","code":""},{"path":"introduction.html","id":"choosing-a-test","chapter":"2 Introduction","heading":"2.1.3 Choosing a test","text":"two tests going look situation; one-sample t-test, one-sample Wilcoxon signed rank test. tests work sort data ‚Äôre considering , different assumptions.data normally distributed, one-sample t-test appropriate. data aren‚Äôt normally distributed, distribution symmetric, sample size small one-sample Wilcoxon signed rank test appropriate.statistical test consider five tasks. come back , pay extra close attention.Setting hypothesisSummarise visualisation dataAssessment assumptionsImplementation statistical testInterpreting output presentation resultsWe won‚Äôt always carry exactly order, always consider five tasks every test.","code":""},{"path":"introduction.html","id":"cs1-two-sample","chapter":"2 Introduction","heading":"2.2 Two-sample tests","text":"","code":""},{"path":"introduction.html","id":"objectives-two-sample","chapter":"2 Introduction","heading":"2.2.1 Objectives (two-sample)","text":"QuestionsWhen perform two-sample test?two-sample tests assumptions?interpret present results tests?ObjectivesSet hypothesis two-sample continuous dataDetermine correct data format perform two-sample test RSummarise visualise dataCheck underlying assumptions (normality, homogeneity variance)able choose appropriate two-sample test run RBe able interpret report results","code":""},{"path":"introduction.html","id":"purpose-and-aim-1","chapter":"2 Introduction","heading":"2.2.2 Purpose and aim","text":"tests used two samples continuous data trying find samples came parent distribution . essentially boils finding difference means two samples.","code":""},{"path":"introduction.html","id":"two-sample-choosing-a-test","chapter":"2 Introduction","heading":"2.2.3 Choosing a test","text":"five key tests can used deal two samples. Choosing test use depends upon key assumptions satisfied sample data effectively boils answering four questions samples:samples normally distributed? (Yes/)big samples? (<30 data points >30 data points)samples paired? (Yes/)samples variance? (Yes/)two sets tests consider depending answers questions 1 2. data normally distributed big samples need look parametric tests. data normally distributed sample size small, need look non-parametric tests (see Figure 2.1. Questions 3 4 help pick specific test use, summarised Figure 2.2.\nFigure 2.1: Category test\n\nFigure 2.2: test use\nTesting whether sample comes normal distribution covered One-sample tests. need visualise data /use Shapiro-Wilk test.size sample makes things easier. maths (specifically due something called central limit theorem even going attempt touch upon ) large samples can use tests assume normality parent population (Student‚Äôs t-test, Welch‚Äôs t-test paired t-test) even parent populations certainly normal. really want understand exactly works, rigorous mathematics. , moment ‚Äôm going say ‚Äôs OK take facts faith just trust .Paired samples mean every data point one sample matching data point sample linked inextricable way. typical example involve group 20 test subjects measured experiment. Providing experiment didn‚Äôt anything fatal test subjects data consist two samples; 20 pre-experiment measurements 20 post-experiment measurements. However, test subjects used pre-experiment data point can matched exactly one post-experiment data points. sense two samples said ‚Äúpaired‚Äù.couple tests (Bartlett‚Äôs test Levene‚Äôs test) can used see two samples come distributions variance. covered later section.Resampling techniques aren‚Äôt covered course require mixture statistical understanding programming skill. Ask demonstrator (Google üòâ) want know .","code":""},{"path":"introduction.html","id":"cs1-tidy-data","chapter":"2 Introduction","heading":"2.3 Tidy data","text":"two samples data can stored one three formats R:two separate vectors,stacked data frame,unstacked data frame/list.Two separate vectors case (hopefully) obvious.using data frame different options organise data. best way formatting data R using tidy data format.Tidy data following properties:variable columnEach observation rowEach value cellStacked form (long format data) data arranged way variable (thing measured) column. consider dataset containing meerkat weights (g) two different countries stacked format data look like:unstacked (wide format) form variable (measured thing) present one column. example, let‚Äôs say measured meerkat weight two countries period years. organise data way year measured values split country:tidy data easiest way analyses R strongly encourage start adopting format standard data collection processing..panelset{--panel-tab-font-family: inherit;}","code":"## # A tibble: 6 √ó 2\n##   country  weight\n##   <chr>     <dbl>\n## 1 Botswana    514\n## 2 Botswana    568\n## 3 Botswana    519\n## 4 Uganda      624\n## 5 Uganda      662\n## 6 Uganda      633## # A tibble: 3 √ó 3\n##    year Botswana Uganda\n##   <dbl>    <dbl>  <dbl>\n## 1  1990      514    624\n## 2  1992      568    662\n## 3  1995      519    633"},{},{"path":"cs1-one-sample-t-test.html","id":"cs1-one-sample-t-test","chapter":"3 One-sample t-test","heading":"3 One-sample t-test","text":"","code":""},{"path":"cs1-one-sample-t-test.html","id":"libraries-and-functions","chapter":"3 One-sample t-test","heading":"3.1 Libraries and functions","text":"tidyversebase RPython","code":""},{"path":"cs1-one-sample-t-test.html","id":"data-and-hypotheses","chapter":"3 One-sample t-test","heading":"3.2 Data and hypotheses","text":"example, suppose measure body lengths male guppies (mm) collected Guanapo River Trinidad. want test whether data support hypothesis mean body actually 20 mm. form following null alternative hypotheses:\\(H_0\\): mean body length equal 20mm (\\(\\mu =\\) 20).\\(H_1\\): mean body length equal 20mm (\\(\\mu \\neq\\) 20).use one-sample, two-tailed t-test see reject null hypothesis .use one-sample test one sample.use two-tailed t-test want know data suggest true (population) mean different 20 mm either direction rather just see greater less 20 mm (case use one-tailed test).‚Äôre using t-test don‚Äôt know better yet ‚Äôm telling . ‚Äôll look precise assumptions/requirements need moment.Make sure downloaded data (see: Datasets) placed within working directory.tidyverseFirst load relevant libraries:read data create table containing data.first line reads data R creates object called tibble, type data frame. data frame contains 3 columns: unique id, river encoding river length measured guppy length.base R\nread data create vector containing data.first line reads data R creates object called data frame. data frame contains single column numbers called ‚ÄúGuanapo‚Äù (name river). situations, statistical analyses, data stored data frame exactly ‚Äôd want. However, one sample tests actually need data stored vector. , second line extracts values Guanapo column fishlengthDF data frame creates simple vector numbers called fishlength_r step necessary one-sample tests look complex data sets, won‚Äôt need second step .Python\nread data :","code":"\n# load tidyverse\nlibrary(tidyverse)\n\n# load rstatix, a tidyverse-friendly stats package\nlibrary(rstatix)\n# import the data\nfishlengthDF <- read_csv(\"data/tidy/CS1-onesample.csv\")\n\nfishlengthDF## # A tibble: 29 √ó 3\n##       id river   length\n##    <dbl> <chr>    <dbl>\n##  1     1 Guanapo   19.1\n##  2     2 Guanapo   23.3\n##  3     3 Guanapo   18.2\n##  4     4 Guanapo   16.4\n##  5     5 Guanapo   19.7\n##  6     6 Guanapo   16.6\n##  7     7 Guanapo   17.5\n##  8     8 Guanapo   19.9\n##  9     9 Guanapo   19.1\n## 10    10 Guanapo   18.8\n## # ‚Ä¶ with 19 more rows\n# import the data\nfishlengthDF <- read.csv(\"data/tidy/CS1-onesample.csv\")\n\n# create a vector containing the data\nfishlength_r <- fishlengthDF$length# load the data\nfishlength_py = pd.read_csv('data/tidy/CS1-onesample.csv')\n\n# inspect the data\nfishlength_py.head()##    id    river  length\n## 0   1  Guanapo    19.1\n## 1   2  Guanapo    23.3\n## 2   3  Guanapo    18.2\n## 3   4  Guanapo    16.4\n## 4   5  Guanapo    19.7"},{"path":"cs1-one-sample-t-test.html","id":"summarise-and-visualise","chapter":"3 One-sample t-test","heading":"3.3 Summarise and visualise","text":"Summarise data visualise :tidyversebase RPython\nFirst look numerical summary data:data appear contain obvious errors, whilst mean median less 20 (18.3 18.8 respectively) absolutely certain sample mean sufficiently different value ‚Äústatistically significant‚Äù, although may anticipate result.","code":"\nsummary(fishlengthDF)##        id        river               length    \n##  Min.   : 1   Length:29          Min.   :11.2  \n##  1st Qu.: 8   Class :character   1st Qu.:17.5  \n##  Median :15   Mode  :character   Median :18.8  \n##  Mean   :15                      Mean   :18.3  \n##  3rd Qu.:22                      3rd Qu.:19.7  \n##  Max.   :29                      Max.   :23.3\nfishlengthDF %>% \n  ggplot(aes(x = river, y = length)) +\n  geom_boxplot()\nsummary(fishlength_r)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##    11.2    17.5    18.8    18.3    19.7    23.3\nboxplot(fishlength_r, main = \"Male guppies\", ylab = \"Length (mm)\")fishlength_py.describe()##               id     length\n## count  29.000000  29.000000\n## mean   15.000000  18.296552\n## std     8.514693   2.584636\n## min     1.000000  11.200000\n## 25%     8.000000  17.500000\n## 50%    15.000000  18.800000\n## 75%    22.000000  19.700000\n## max    29.000000  23.300000(\n  ggplot(fishlength_py,\n    aes(x = 'river',\n        y = 'length'))\n  + geom_boxplot()\n)"},{"path":"cs1-one-sample-t-test.html","id":"assumptions","chapter":"3 One-sample t-test","heading":"3.4 Assumptions","text":"comes one-sample tests, two options:t-testWilcoxon signed-rank testFor us use t-test analysis (results valid) make two assumptions:parent distribution sample taken normally distributed (sample data normally distributed ).worth noting though t-test actually pretty robust situations sample data normal. sufficiently large sample sizes (guess good mine, conventionally means 30 data points), can use t-test without worrying whether underlying population normally distributed .data point sample independent others. general something can tested instead considered sampling procedure. example, taking repeated measurements individual generate data independent.second point know nothing ignore (issue needs considered experimental design), whereas first assumption can checked.\nthree ways checking normality:increasing order rigour, haveHistogramQuantile-quantile plotShapiro-Wilk test","code":""},{"path":"cs1-one-sample-t-test.html","id":"histogram-of-the-data","chapter":"3 One-sample t-test","heading":"3.4.1 Histogram of the data","text":"Plot histogram data, gives:tidyversebase RPythonThe distribution appears uni-modal symmetric, isn‚Äôt obviously non-normal. However, lot distributions simple properties aren‚Äôt normal, isn‚Äôt exactly rigorous. Thankfully , rigorous tests.NB. even looking distribution assess assumption normality already going far beyond anyone else ever . Nevertheless, continue.","code":"\nfishlengthDF %>% \n  ggplot(aes(x = length)) +\n  geom_histogram(bins = 15)\nhist(fishlength_r, breaks = 15)(\n  ggplot(fishlength_py, aes(x = \"length\"))\n  + geom_histogram(bins = 15)\n)"},{"path":"cs1-one-sample-t-test.html","id":"q-q-plot-of-the-data","chapter":"3 One-sample t-test","heading":"3.4.2 Q-Q plot of the data","text":"Q-Q plot short quantile-quantile plot. diagnostic plot (sometimes called) way comparing two distributions. Q-Q plots work won‚Äôt explained ask demonstrator really want know going .Construct Q-Q Plot quantiles data quantiles normal distribution:tidyversebase RPythonWhat important know data normally distributed points lie (close ) diagonal line graph.case, points lie quite close line part sample quantiles (points) either end sample distribution either smaller (line left) larger (line right) expected supposed normally distributed. suggests sample distribution bit spread expected came normal distribution.important recognise isn‚Äôt simple unambiguous answer interpreting types graph, terms whether assumption normality well met instead often boils matter experience.rare situation indeed assumptions necessary test met unequivocally certain degree personal interpretation always needed. ask whether data normal ‚Äúenough‚Äù confident validity test.four examples QQ plots different types distributions:two graphs relate 200 data points drawn normal distribution. Even can see points lie perfectly diagonal line QQ plot, certain amount deviation top bottom graph can happen just chance (draw different set point graph look slightly different).two graphs relate 200 data points drawn uniform distribution. Uniform distributions condensed normal distributions, reflected QQ plot pronounced S-shaped pattern (colloquially known snaking).two graphs relate 200 data points drawn t distribution. t distributions spread normal distributions, reflected QQ plot pronounced S-shaped pattern , time snaking reflection observed uniform distribution.two graphs relate 200 data points drawn exponential distribution. Exponential distributions symmetric skewed compared normal distributions. significant right-skew distribution reflected QQ plot points curve away diagonal line ends (left-skew points line ends).four cases worth noting deviations ends plot.","code":"\nfishlengthDF %>% \n  ggplot(aes(sample = length)) +\n  stat_qq() +\n  stat_qq_line()\n# plot the Q-Q plot\nqqnorm(fishlength_r)\n\n# and add a comparison line\nqqline(fishlength_r)(\n  ggplot(fishlength_py, aes(sample = \"length\"))\n  + stat_qq()\n  + stat_qq_line()\n)"},{"path":"cs1-one-sample-t-test.html","id":"shapiro-wilk-test","chapter":"3 One-sample t-test","heading":"3.4.3 Shapiro-Wilk test","text":"one number formal statistical test assess whether given sample numbers come normal distribution. calculates probability getting sample data underlying distribution fact normal. easy carry R.Perform Shapiro-Wilk test data:tidyversevariable indicated variable used perform test onstatistic gives calculated W-value (0.9493842)p gives calculated p-value (0.1764229)base RThe 1st line gives name test 2nd line reminds data set calledThe 3rd line contains two key outputs test:calculated w-value 0.9494 (don‚Äôt need know )p-value 0.1764PythonAs p-value bigger 0.05 (say) can say insufficient evidence reject null hypothesis sample came normal distribution.important recognise Shapiro-Wilk test without limitations. rather sensitive sample size considered. general, small sample sizes, test relaxed normality (nearly data sets considered normal), whereas large sample sizes test can overly strict, can fail recognise data sets nearly normal indeed.","code":"\nfishlengthDF %>% \n  shapiro_test(length)## # A tibble: 1 √ó 3\n##   variable statistic     p\n##   <chr>        <dbl> <dbl>\n## 1 length       0.949 0.176\nshapiro.test(fishlength_r)## \n##  Shapiro-Wilk normality test\n## \n## data:  fishlength_r\n## W = 0.94938, p-value = 0.1764stats.shapiro(fishlength_py.length)## ShapiroResult(statistic=0.9493839740753174, pvalue=0.17642046511173248)"},{"path":"cs1-one-sample-t-test.html","id":"assumptions-overview","chapter":"3 One-sample t-test","heading":"3.4.4 Assumptions overview","text":"terms assessing assumptions test always worth considering several methods, graphical analytic, just relying single method.fishlength example, graphical Q-Q plot analysis especially conclusive suggestion snaking plots, Shapiro-Wilk test gave non-significant p-value (0.1764). Putting two together, along original histogram recognition 30 data points data set personally happy assumptions t-test met well enough trust result t-test, may ‚Ä¶case consider alternative test less stringent assumptions (less powerful): one-sample Wilcoxon signed-rank test.","code":""},{"path":"cs1-one-sample-t-test.html","id":"implement-the-test","chapter":"3 One-sample t-test","heading":"3.5 Implement the test","text":"Perform one-sample, two-tailed t-test:tidyverseThe t_test() function requires three arguments:formula, give length ~ 1 indicate one-sample test lengththe mu mean tested null hypothesis, 20the alternative argument gives type alternative hypothesis must one two.sided, greater less. prior assumptions whether alternative fish length greater less 20, choose two.sided.base RThe first argument must numerical vector data values.second argument must number mean tested null hypothesis.third argument gives type alternative hypothesis must one two.sided, greater less. prior assumptions whether alternative fish length greater less 20, choose two.sided.PythonThe first argument must numerical series data values.second argument must number mean tested null hypothesis.Python can two two-sided 1-sample t-test (.e.¬†can test whether mean different 20 whether greater less ‚Äì chose beyond ).","code":"\nfishlengthDF %>% \n  t_test(length ~ 1,\n         mu = 20,\n         alternative = \"two.sided\")\nt.test(fishlength_r,\n       mu = 20,\n       alternative = \"two.sided\")## \n##  One Sample t-test\n## \n## data:  fishlength_r\n## t = -3.5492, df = 28, p-value = 0.001387\n## alternative hypothesis: true mean is not equal to 20\n## 95 percent confidence interval:\n##  17.31341 19.27969\n## sample estimates:\n## mean of x \n##  18.29655stats.ttest_1samp(fishlength_py.length,\n                  popmean = 20, \n                  alternative = \"two-sided\")"},{"path":"cs1-one-sample-t-test.html","id":"interpreting-the-output-and-report-results","chapter":"3 One-sample t-test","heading":"3.6 Interpreting the output and report results","text":"output now see console window:tidyversethe statistic column gives us t-statistic -3.5492 (‚Äôll need reporting)df column tells us 28 degrees freedom (‚Äôll need reporting)p column gives us p-value 0.00139base RThe 1st line gives name test 2nd line reminds dataset calledThe 3rd line contains three key outputs test:\ncalculated t-value -3.5492 (‚Äôll need reporting)\n28 degrees freedom (‚Äôll need reporting)\np-value 0.001387.\ncalculated t-value -3.5492 (‚Äôll need reporting)28 degrees freedom (‚Äôll need reporting)p-value 0.001387.4th line simply states alternative hypothesisThe 5th 6th lines give 95th confidence interval (don‚Äôt need know )7th, 8th 9th lines give sample mean (18.29655).PythonThe output minimal. 1st number brackets t-value 2nd number p-valueThe p-value ‚Äôre mostly interested . gives probability us getting sample null hypothesis actually true.:high p-value means high probability observing sample null hypothesis probably true whereasa low p-value means low probability observing sample null hypothesis probably true.important realise p-value just indication absolute certainty interpretation.People, however like definite answers pick artificial probability threshold (called significance level) order able say something decisive. standard significance level 0.05 since p-value smaller choose say ‚Äúunlikely particular sample null hypothesis true‚Äù. Consequently, can reject null hypothesis state :one-sample t-test indicated mean body length male guppies (\\(\\mu\\) = 18.29mm) differs significantly 20 mm (t = -3.55, df = 28, p = 0.0014).sentence adequate concluding statement test write paper report. Note included (brackets) information actual mean value group(\\(\\mu\\) = 18.29mm), test statistic (t = -3.55), degrees freedom (df = 28), p-value (p = 0.0014). journals required report whether p-value less critical value (e.g.¬†p < 0.05) always recommend reporting actual p-value obtained.Please feel free ask demonstrator aspect section unclear form core classical hypothesis testing logic applies rest tests.","code":"## # A tibble: 1 √ó 7\n##   .y.    group1 group2         n statistic    df       p\n## * <chr>  <chr>  <chr>      <int>     <dbl> <dbl>   <dbl>\n## 1 length 1      null model    29     -3.55    28 0.00139## \n##  One Sample t-test\n## \n## data:  fishlength_r\n## t = -3.5492, df = 28, p-value = 0.001387\n## alternative hypothesis: true mean is not equal to 20\n## 95 percent confidence interval:\n##  17.31341 19.27969\n## sample estimates:\n## mean of x \n##  18.29655## Ttest_1sampResult(statistic=-3.5491839564647205, pvalue=0.0013868577835348002)"},{"path":"cs1-one-sample-t-test.html","id":"exercise-gastric-juices","chapter":"3 One-sample t-test","heading":"3.7 Exercise: gastric juices","text":"Exercise 3.1  following data dissolving times (seconds) drug agitated gastric juice:42.7, 43.4, 44.6, 45.1, 45.6, 45.9, 46.8, 47.6Do results provide evidence suggest dissolving time drug different 45 seconds?Create tidy data frame save .csv formatWrite null alternative hypotheses.Summarise visualise data perform appropriate one-sample t-test.\ncan say dissolving time? (sentence use report )\ncan say dissolving time? (sentence use report )Check assumptions test.\ntest valid?\ntest valid?\\(H_0\\) : mean \\(=\\) 45s\\(H_1\\) : mean \\(\\neq\\) 45sWe can create data frame Excel save .csv file, example CS1-gastric_juices.csv. contains two columns, id column dissolving_time column measured values.tidyverseWe can look histogram box plot data:base RPythonWe can look histogram box plot data:Python (plotnine particular) gets bit cranky try create geom_boxplot define x aesthetic. Hence us putting 1. value meaningless, however.8 data points, histogram rather uninformative. Thankfully box plot bit useful . can see:don‚Äôt appear major errors data entry aren‚Äôt huge outliersThe median value box-plot (thick black line) pretty close 45 wouldn‚Äôt surprised mean data isn‚Äôt significantly different 45. can confirm looking mean median values calculated using summary command earlier.data appear symmetric, whilst can‚Äôt tell ‚Äôre normal ‚Äôre least massively skewed.Normality:tidyversebase RPythonThe Shapiro test p-value 0.964 (given bigger 0.05) suggests data normal enough.Q-Q plot isn‚Äôt perfect, deviation points away line since points aren‚Äôt accelerating away line , since 8 points, can claim, slight reservations, assumption normality appears adequately well met.Overall, somewhat confident assumption normality well-enough met t-test appropriate method analysing data. Note ridiculous number caveats slightly political/slippery language ‚Äôm using. intentional reflects ambiguous nature assumption checking. important approach statistics need embrace.reality, found situation also try non-parametric test data (Wilcoxon signed-rank test) see whether get conclusion whether median dissolving time differs 45s. Technically, don‚Äôt know Wilcoxon test yet haven‚Äôt done section materials. Anyway, get conclusion confidence result test goes considerably; doesn‚Äôt matter well assumption met, get result. hand get completely different conclusion carrying non-parametric test bets ; now little confidence test result don‚Äôt know one believe (case assumptions test bit unclear). example Wilcoxon test also gives us non-significant result good.tidyversebase RPythonA one-sample t-test indicated mean dissolving time drug significantly different 45s (t=0.366 , df=7 , p=0.725), ..panelset{--panel-tab-font-family: inherit;}","code":"\n# load the data\ndissolving <- read_csv(\"data/tidy/CS1-gastric_juices.csv\")\n\n# have a look at the data\ndissolving## # A tibble: 8 √ó 2\n##      id dissolving_time\n##   <dbl>           <dbl>\n## 1     1            42.7\n## 2     2            43.4\n## 3     3            44.6\n## 4     4            45.1\n## 5     5            45.6\n## 6     6            45.9\n## 7     7            46.8\n## 8     8            47.6\n# summarise the data\nsummary(dissolving)##        id       dissolving_time\n##  Min.   :1.00   Min.   :42.70  \n##  1st Qu.:2.75   1st Qu.:44.30  \n##  Median :4.50   Median :45.35  \n##  Mean   :4.50   Mean   :45.21  \n##  3rd Qu.:6.25   3rd Qu.:46.12  \n##  Max.   :8.00   Max.   :47.60\n# create a histogram\ndissolving %>% \n  ggplot(aes(x = dissolving_time)) +\n  geom_histogram(bins = 4)\n# create a boxplot\ndissolving %>% \n  ggplot(aes(y = dissolving_time)) +\n  geom_boxplot()\n# load the data\ndissolving_r <- read.csv(\"data/tidy/CS1-gastric_juices.csv\")\n\n# have a look at the data\ndissolving_r##   id dissolving_time\n## 1  1            42.7\n## 2  2            43.4\n## 3  3            44.6\n## 4  4            45.1\n## 5  5            45.6\n## 6  6            45.9\n## 7  7            46.8\n## 8  8            47.6\n# summarise the data\nsummary(dissolving_r)##        id       dissolving_time\n##  Min.   :1.00   Min.   :42.70  \n##  1st Qu.:2.75   1st Qu.:44.30  \n##  Median :4.50   Median :45.35  \n##  Mean   :4.50   Mean   :45.21  \n##  3rd Qu.:6.25   3rd Qu.:46.12  \n##  Max.   :8.00   Max.   :47.60\nhist(dissolving_r$dissolving_time)\nboxplot(dissolving_r$dissolving_time)# load the data\ndissolving_py = pd.read_csv(\"data/tidy/CS1-gastric_juices.csv\")\n\n# have a look at the data\ndissolving_py.head()\n\n# summarise the data##    id  dissolving_time\n## 0   1             42.7\n## 1   2             43.4\n## 2   3             44.6\n## 3   4             45.1\n## 4   5             45.6dissolving_py.describe()##             id  dissolving_time\n## count  8.00000         8.000000\n## mean   4.50000        45.212500\n## std    2.44949         1.640068\n## min    1.00000        42.700000\n## 25%    2.75000        44.300000\n## 50%    4.50000        45.350000\n## 75%    6.25000        46.125000\n## max    8.00000        47.600000# create a histogram\n(\n  ggplot(dissolving_py,\n    aes(x = \"dissolving_time\"))\n  + geom_histogram(bins = 4)\n)# create a box plot\n(\n  ggplot(dissolving_py,\n    aes(x = 1, y = \"dissolving_time\"))\n  + geom_boxplot()\n)\n# perform Shapiro-Wilk test\ndissolving %>% \n  shapiro_test(dissolving_time)## # A tibble: 1 √ó 3\n##   variable        statistic     p\n##   <chr>               <dbl> <dbl>\n## 1 dissolving_time     0.980 0.964\n# create a Q-Q plot\ndissolving %>% \n  ggplot(aes(sample = dissolving_time)) +\n  stat_qq() +\n  stat_qq_line(colour = \"red\")\nshapiro.test(dissolving_r$dissolving_time)## \n##  Shapiro-Wilk normality test\n## \n## data:  dissolving_r$dissolving_time\n## W = 0.98023, p-value = 0.9641\nqqnorm(dissolving_r$dissolving_time)\nqqline(dissolving_r$dissolving_time)# Perform Shapiro-Wilk test to check normality\nstats.shapiro(dissolving_py.dissolving_time)## ShapiroResult(statistic=0.9802345037460327, pvalue=0.9640554785728455)# Create a Q-Q plot\n(\n  ggplot(dissolving_py,\n    aes(sample = \"dissolving_time\"))\n  + stat_qq()\n  + stat_qq_line()\n)\n# perform one-sample t-test\ndissolving %>% \n  t_test(dissolving_time ~ 1,\n         mu = 45,\n         alternative = \"two.sided\")## # A tibble: 1 √ó 7\n##   .y.             group1 group2         n statistic    df     p\n## * <chr>           <chr>  <chr>      <int>     <dbl> <dbl> <dbl>\n## 1 dissolving_time 1      null model     8     0.366     7 0.725\nt.test(dissolving_r$dissolving_time,\n       mu = 45 ,\n       alternative = \"two.sided\")## \n##  One Sample t-test\n## \n## data:  dissolving_r$dissolving_time\n## t = 0.36647, df = 7, p-value = 0.7248\n## alternative hypothesis: true mean is not equal to 45\n## 95 percent confidence interval:\n##  43.84137 46.58363\n## sample estimates:\n## mean of x \n##   45.2125stats.ttest_1samp(dissolving_py.dissolving_time,\n                  popmean = 45, \n                  alternative = \"two-sided\")## Ttest_1sampResult(statistic=0.36647318560088843, pvalue=0.7248382429835611)"},{"path":"cs1-one-sample-t-test.html","id":"hypotheses","chapter":"3 One-sample t-test","heading":"3.7.1 Hypotheses","text":"\\(H_0\\) : mean \\(=\\) 45s\\(H_1\\) : mean \\(\\neq\\) 45s","code":""},{"path":"cs1-one-sample-t-test.html","id":"data-summarise-visualise","chapter":"3 One-sample t-test","heading":"3.7.2 Data, summarise & visualise","text":"can create data frame Excel save .csv file, example CS1-gastric_juices.csv. contains two columns, id column dissolving_time column measured values.tidyverseWe can look histogram box plot data:base RPythonWe can look histogram box plot data:Python (plotnine particular) gets bit cranky try create geom_boxplot define x aesthetic. Hence us putting 1. value meaningless, however.8 data points, histogram rather uninformative. Thankfully box plot bit useful . can see:don‚Äôt appear major errors data entry aren‚Äôt huge outliersThe median value box-plot (thick black line) pretty close 45 wouldn‚Äôt surprised mean data isn‚Äôt significantly different 45. can confirm looking mean median values calculated using summary command earlier.data appear symmetric, whilst can‚Äôt tell ‚Äôre normal ‚Äôre least massively skewed.","code":"\n# load the data\ndissolving <- read_csv(\"data/tidy/CS1-gastric_juices.csv\")\n\n# have a look at the data\ndissolving## # A tibble: 8 √ó 2\n##      id dissolving_time\n##   <dbl>           <dbl>\n## 1     1            42.7\n## 2     2            43.4\n## 3     3            44.6\n## 4     4            45.1\n## 5     5            45.6\n## 6     6            45.9\n## 7     7            46.8\n## 8     8            47.6\n# summarise the data\nsummary(dissolving)##        id       dissolving_time\n##  Min.   :1.00   Min.   :42.70  \n##  1st Qu.:2.75   1st Qu.:44.30  \n##  Median :4.50   Median :45.35  \n##  Mean   :4.50   Mean   :45.21  \n##  3rd Qu.:6.25   3rd Qu.:46.12  \n##  Max.   :8.00   Max.   :47.60\n# create a histogram\ndissolving %>% \n  ggplot(aes(x = dissolving_time)) +\n  geom_histogram(bins = 4)\n# create a boxplot\ndissolving %>% \n  ggplot(aes(y = dissolving_time)) +\n  geom_boxplot()\n# load the data\ndissolving_r <- read.csv(\"data/tidy/CS1-gastric_juices.csv\")\n\n# have a look at the data\ndissolving_r##   id dissolving_time\n## 1  1            42.7\n## 2  2            43.4\n## 3  3            44.6\n## 4  4            45.1\n## 5  5            45.6\n## 6  6            45.9\n## 7  7            46.8\n## 8  8            47.6\n# summarise the data\nsummary(dissolving_r)##        id       dissolving_time\n##  Min.   :1.00   Min.   :42.70  \n##  1st Qu.:2.75   1st Qu.:44.30  \n##  Median :4.50   Median :45.35  \n##  Mean   :4.50   Mean   :45.21  \n##  3rd Qu.:6.25   3rd Qu.:46.12  \n##  Max.   :8.00   Max.   :47.60\nhist(dissolving_r$dissolving_time)\nboxplot(dissolving_r$dissolving_time)# load the data\ndissolving_py = pd.read_csv(\"data/tidy/CS1-gastric_juices.csv\")\n\n# have a look at the data\ndissolving_py.head()\n\n# summarise the data##    id  dissolving_time\n## 0   1             42.7\n## 1   2             43.4\n## 2   3             44.6\n## 3   4             45.1\n## 4   5             45.6dissolving_py.describe()##             id  dissolving_time\n## count  8.00000         8.000000\n## mean   4.50000        45.212500\n## std    2.44949         1.640068\n## min    1.00000        42.700000\n## 25%    2.75000        44.300000\n## 50%    4.50000        45.350000\n## 75%    6.25000        46.125000\n## max    8.00000        47.600000# create a histogram\n(\n  ggplot(dissolving_py,\n    aes(x = \"dissolving_time\"))\n  + geom_histogram(bins = 4)\n)# create a box plot\n(\n  ggplot(dissolving_py,\n    aes(x = 1, y = \"dissolving_time\"))\n  + geom_boxplot()\n)"},{"path":"cs1-one-sample-t-test.html","id":"assumptions-1","chapter":"3 One-sample t-test","heading":"3.7.3 Assumptions","text":"Normality:tidyversebase RPythonThe Shapiro test p-value 0.964 (given bigger 0.05) suggests data normal enough.Q-Q plot isn‚Äôt perfect, deviation points away line since points aren‚Äôt accelerating away line , since 8 points, can claim, slight reservations, assumption normality appears adequately well met.Overall, somewhat confident assumption normality well-enough met t-test appropriate method analysing data. Note ridiculous number caveats slightly political/slippery language ‚Äôm using. intentional reflects ambiguous nature assumption checking. important approach statistics need embrace.reality, found situation also try non-parametric test data (Wilcoxon signed-rank test) see whether get conclusion whether median dissolving time differs 45s. Technically, don‚Äôt know Wilcoxon test yet haven‚Äôt done section materials. Anyway, get conclusion confidence result test goes considerably; doesn‚Äôt matter well assumption met, get result. hand get completely different conclusion carrying non-parametric test bets ; now little confidence test result don‚Äôt know one believe (case assumptions test bit unclear). example Wilcoxon test also gives us non-significant result good.","code":"\n# perform Shapiro-Wilk test\ndissolving %>% \n  shapiro_test(dissolving_time)## # A tibble: 1 √ó 3\n##   variable        statistic     p\n##   <chr>               <dbl> <dbl>\n## 1 dissolving_time     0.980 0.964\n# create a Q-Q plot\ndissolving %>% \n  ggplot(aes(sample = dissolving_time)) +\n  stat_qq() +\n  stat_qq_line(colour = \"red\")\nshapiro.test(dissolving_r$dissolving_time)## \n##  Shapiro-Wilk normality test\n## \n## data:  dissolving_r$dissolving_time\n## W = 0.98023, p-value = 0.9641\nqqnorm(dissolving_r$dissolving_time)\nqqline(dissolving_r$dissolving_time)# Perform Shapiro-Wilk test to check normality\nstats.shapiro(dissolving_py.dissolving_time)## ShapiroResult(statistic=0.9802345037460327, pvalue=0.9640554785728455)# Create a Q-Q plot\n(\n  ggplot(dissolving_py,\n    aes(sample = \"dissolving_time\"))\n  + stat_qq()\n  + stat_qq_line()\n)"},{"path":"cs1-one-sample-t-test.html","id":"implement-test","chapter":"3 One-sample t-test","heading":"3.7.4 Implement test","text":"tidyversebase RPythonA one-sample t-test indicated mean dissolving time drug significantly different 45s (t=0.366 , df=7 , p=0.725), .","code":"\n# perform one-sample t-test\ndissolving %>% \n  t_test(dissolving_time ~ 1,\n         mu = 45,\n         alternative = \"two.sided\")## # A tibble: 1 √ó 7\n##   .y.             group1 group2         n statistic    df     p\n## * <chr>           <chr>  <chr>      <int>     <dbl> <dbl> <dbl>\n## 1 dissolving_time 1      null model     8     0.366     7 0.725\nt.test(dissolving_r$dissolving_time,\n       mu = 45 ,\n       alternative = \"two.sided\")## \n##  One Sample t-test\n## \n## data:  dissolving_r$dissolving_time\n## t = 0.36647, df = 7, p-value = 0.7248\n## alternative hypothesis: true mean is not equal to 45\n## 95 percent confidence interval:\n##  43.84137 46.58363\n## sample estimates:\n## mean of x \n##   45.2125stats.ttest_1samp(dissolving_py.dissolving_time,\n                  popmean = 45, \n                  alternative = \"two-sided\")## Ttest_1sampResult(statistic=0.36647318560088843, pvalue=0.7248382429835611)"},{},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"cs1-onesample-wilcoxon-signed-rank","chapter":"4 Wilcoxon signed-rank test","heading":"4 Wilcoxon signed-rank test","text":"test also considers single sample, however test (contrast one sample t-test) don‚Äôt assume parent distribution normally distributed. still need parent distribution (consequently sample) symmetric though. test look see median parent distributions differs significantly given hypothesised value (contrast t-test looks mean).","code":""},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"libraries-and-functions-1","chapter":"4 Wilcoxon signed-rank test","heading":"4.1 Libraries and functions","text":"tidyversebase RPython","code":""},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"data-and-hypotheses-1","chapter":"4 Wilcoxon signed-rank test","heading":"4.2 Data and hypotheses","text":", use fishlength data set. one-sample Wilcoxon signed-rank test allows see median body length different specified value. want test whether data support hypothesis median body actually 20 mm. following null alternative hypotheses similar used one sample t-test:\\(H_0\\): median body length equal 20 mm (\\(\\mu =\\) 20).\\(H_1\\): median body length equal 20 mm (\\(\\mu \\neq\\) 20).use one-sample, two-tailed Wilcoxon signed-rank test see reject null hypothesis .","code":""},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"summarise-and-visualise-1","chapter":"4 Wilcoxon signed-rank test","heading":"4.3 Summarise and visualise","text":"previous section, nothing really changed now (‚Äôre good start practical!)","code":""},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"assumptions-2","chapter":"4 Wilcoxon signed-rank test","heading":"4.4 Assumptions","text":"order use one-sample Wilcoxon rank-sum test analysis (results strictly valid) make two assumptions:data distributed symmetrically around medianEach data point sample independent others. t-test common feature nearly statistical tests. Lack independence data really tough deal (impossible) large part proper experimental design ensuring .Whilst formal statistical tests symmetry opt simple visual inspection using box plot histogram.Plot histogram box plot data:tidyverse\nLet‚Äôs first determine median, can use compare data .base R\nLet‚Äôs first determine median, can use compare data .get following plots:Python\nLet‚Äôs first determine median, can use compare data .can see whilst distribution isn‚Äôt perfectly symmetric, neither heavily skewed left right can make call distribution symmetric enough us happy results test.","code":"\n# determine the median\nmedian_fishlength <- fishlengthDF %>% \n  summarise(median_fishlength = median(length)) %>% \n  pull(median_fishlength)\n# create a histogram\nfishlengthDF %>% \n  ggplot(aes(x = length)) +\n  geom_histogram(bins = 10) +\n  geom_vline(xintercept = median_fishlength,\n             colour = \"red\")\n# create box plot\nfishlengthDF %>% \n  ggplot(aes(y = length)) +\n  geom_boxplot()\n# determine the median\nmedian_fishlength <- median(fishlength_r)\nhist(fishlength_r, breaks = 10)\nabline(v = median_fishlength,\n       col = \"red\")\n\nboxplot(fishlength_r)median_fishlength = fishlength_py.length.median()# create a histogram\n(\nggplot(fishlength_py, aes(x = \"length\"))\n+ geom_histogram(bins = 10)\n+ geom_vline(xintercept = median_fishlength,\n             colour = \"red\")\n)(\n# create box plot\nggplot(fishlength_py,\naes(x = 1,\n    y = 'length'))\n+ geom_boxplot()\n)"},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"implement-the-test-1","chapter":"4 Wilcoxon signed-rank test","heading":"4.5 Implement the test","text":"Perform one-sample, two-tailed Wilcoxon signed-rank test:tidyverseThe syntax identical one-sample t-test carried earlier.formula, give length ~ 1 indicate one-sample test lengththe mu median tested null hypothesis, 20the alternative argument gives type alternative hypothesis must one two.sided, greater less. prior assumptions whether alternative median fish length greater less 20, choose two.sided.base RThe syntax identical one-sample t-test carried earlier.first argument must numerical vector data values.second argument must number median tested null hypothesis.third argument gives type alternative hypothesis must one two.sided, greater less.PythonThe syntax similar earlier:1st argument give wilcoxon() function array differences data points median tested null hypothesis, .e.¬†data points (fishlength_py.length) minus test median (20, case).2nd argument gives us type alternative hypothesis must one ‚Äútwo-sided‚Äù, ‚Äúlarger‚Äù, ‚Äúsmaller‚Äù. contrast 1-sample t-test Python can mange two-sided alternative hypotheses.","code":"\nfishlengthDF %>% \n  wilcox_test(length ~ 1,\n              mu = 20,\n              alternative = \"two.sided\")\nwilcox.test(fishlength_r, \n            mu = 20,\n            alternative = \"two.sided\")stats.wilcoxon(fishlength_py.length - 20,\n               alternative = \"two-sided\")"},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"interpreting-the-output-and-report-results-1","chapter":"4 Wilcoxon signed-rank test","heading":"4.6 Interpreting the output and report results","text":"output now see console windowtidyversethe statistic column gives us t-statistic 67.5 (‚Äôll need reporting)n column gives us sample size 29the p column gives us p-value 0.0012base RThe first two lines give warning (error) message regarding implementation test. can safely ignored case p-value small, essentially, ‚Äôs letting know data values identical . supposed happen dealing continuous data test, practice ‚Äôs something need worry .3rd line gives name test 4th line reminds data set calledThe 5th line contains two key outputs test:\ncalculated statistic 67.5 (‚Äôll need reporting)\np-value 0.001222.\ncalculated statistic 67.5 (‚Äôll need reporting)p-value 0.001222.6th line simply states alternative hypothesisPythonAgain, p-value ‚Äôre interested . gives probability us getting sample null hypothesis actually true.\n, case since p-value less 0.05 can reject null hypothesis state :one-sample Wilcoxon signed-rank test indicated median body length male guppies (\\(\\mu\\) = 18.8 mm) differs significantly 20 mm (V = 67.5, n = 29, p = 0.0012).sentence adequate concluding statement test write paper report. Note included (brackets) information median value group (\\(\\mu\\) = 18.8 mm), test statistic (V = 67.5), number observations (n = 29), p-value (p = 0.0012).","code":"## # A tibble: 1 √ó 6\n##   .y.    group1 group2         n statistic       p\n## * <chr>  <chr>  <chr>      <int>     <dbl>   <dbl>\n## 1 length 1      null model    29      67.5 0.00122## Warning in wilcox.test.default(fishlength_r, mu = 20, alternative =\n## \"two.sided\"): cannot compute exact p-value with ties## \n##  Wilcoxon signed rank test with continuity correction\n## \n## data:  fishlength_r\n## V = 67.5, p-value = 0.001222\n## alternative hypothesis: true location is not equal to 20## WilcoxonResult(statistic=67.5, pvalue=0.0011760820729428206)"},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"exercise","chapter":"4 Wilcoxon signed-rank test","heading":"4.7 Exercise","text":"Exercise 4.1  Performing Wilcoxon signed-rank test:Analyse drug dataset using one-sample Wilcoxon signed-rank testDiscuss (virtual) neighbour two tests feel best suited data.matter case?\\(H_0\\) : median \\(=\\) 45s\\(H_1\\) : median \\(\\neq\\) 45sFrom box plot previous exercise already know data symmetric enough test valid.Performing test:tidyversebase RPythonA one-sample Wilcoxon-signed rank test indicated median dissolving time drug significantly different 45 s (V=22, n=8 , p=0.64)terms choosing two test can see meet respective assumptions tests valid. case tests also agree terms conclusions .e.¬†average dissolving time (either mean median) doesn‚Äôt differ significantly proposed value 45 s.one answer doesn‚Äôt matter test use.Another answer pick test measures quantity ‚Äôre interested .e. care medians use Wilcoxon test, whereas care means use t-test.final answer , since test valid prefer use test greater power. t-tests always power Wilcoxon tests (long ‚Äôre valid) report one. (‚Äôll talk last session power effectively capacity test detect significant difference - power better).","code":"\ndissolving %>% \n  wilcox_test(dissolving_time ~ 1,\n              mu = 45,\n              alternative = \"two.sided\")## # A tibble: 1 √ó 6\n##   .y.             group1 group2         n statistic     p\n## * <chr>           <chr>  <chr>      <int>     <dbl> <dbl>\n## 1 dissolving_time 1      null model     8        22 0.641\nwilcox.test(dissolving_r$dissolving_time,\n            mu = 45,\n            alternative = \"two.sided\")## \n##  Wilcoxon signed rank exact test\n## \n## data:  dissolving_r$dissolving_time\n## V = 22, p-value = 0.6406\n## alternative hypothesis: true location is not equal to 45stats.wilcoxon(dissolving_py.dissolving_time - 45,\n               alternative = \"two-sided\")## WilcoxonResult(statistic=14.0, pvalue=0.640625)"},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"hypotheses-1","chapter":"4 Wilcoxon signed-rank test","heading":"4.7.1 Hypotheses","text":"\\(H_0\\) : median \\(=\\) 45s\\(H_1\\) : median \\(\\neq\\) 45s","code":""},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"assumptions-3","chapter":"4 Wilcoxon signed-rank test","heading":"4.7.2 Assumptions","text":"box plot previous exercise already know data symmetric enough test valid.","code":""},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"wilcoxon-signed-rank-test","chapter":"4 Wilcoxon signed-rank test","heading":"4.7.3 Wilcoxon signed-rank test","text":"Performing test:tidyversebase RPythonA one-sample Wilcoxon-signed rank test indicated median dissolving time drug significantly different 45 s (V=22, n=8 , p=0.64)","code":"\ndissolving %>% \n  wilcox_test(dissolving_time ~ 1,\n              mu = 45,\n              alternative = \"two.sided\")## # A tibble: 1 √ó 6\n##   .y.             group1 group2         n statistic     p\n## * <chr>           <chr>  <chr>      <int>     <dbl> <dbl>\n## 1 dissolving_time 1      null model     8        22 0.641\nwilcox.test(dissolving_r$dissolving_time,\n            mu = 45,\n            alternative = \"two.sided\")## \n##  Wilcoxon signed rank exact test\n## \n## data:  dissolving_r$dissolving_time\n## V = 22, p-value = 0.6406\n## alternative hypothesis: true location is not equal to 45stats.wilcoxon(dissolving_py.dissolving_time - 45,\n               alternative = \"two-sided\")## WilcoxonResult(statistic=14.0, pvalue=0.640625)"},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"discussion","chapter":"4 Wilcoxon signed-rank test","heading":"4.7.4 Discussion","text":"terms choosing two test can see meet respective assumptions tests valid. case tests also agree terms conclusions .e.¬†average dissolving time (either mean median) doesn‚Äôt differ significantly proposed value 45 s.one answer doesn‚Äôt matter test use.Another answer pick test measures quantity ‚Äôre interested .e. care medians use Wilcoxon test, whereas care means use t-test.final answer , since test valid prefer use test greater power. t-tests always power Wilcoxon tests (long ‚Äôre valid) report one. (‚Äôll talk last session power effectively capacity test detect significant difference - power better).","code":""},{"path":"cs1-onesample-wilcoxon-signed-rank.html","id":"key-points","chapter":"4 Wilcoxon signed-rank test","heading":"4.8 Key points","text":"One-sample tests used single sample continuous dataThe t-test assumes data normally distributed independent otherThe Wilcoxon signed-rank test assume normal distribution, require independent samples symmetry around medianA good way assessing assumption normality checking data Q-Q plot.panelset{--panel-tab-font-family: inherit;}","code":""},{},{"path":"cs1-students-t-test.html","id":"cs1-students-t-test","chapter":"5 Student‚Äôs t-test","heading":"5 Student‚Äôs t-test","text":"test assume sample data sets normally distributed equal variance. test see means two samples differ significantly .language used section slightly different used section 2.1. Although language used section 2.1 technically correct, sentences somewhat onerous read. ‚Äôve opted easier reading style expense technical accuracy. Please feel free re-write section (leisure).","code":""},{"path":"cs1-students-t-test.html","id":"libraries-and-functions-2","chapter":"5 Student‚Äôs t-test","heading":"5.1 Libraries and functions","text":"tidyversebase RPython","code":""},{"path":"cs1-students-t-test.html","id":"data-and-hypotheses-2","chapter":"5 Student‚Äôs t-test","heading":"5.2 Data and hypotheses","text":"example, suppose now measure body lengths male guppies (mm) collected two rivers Trinidad; Aripo Guanapo. want test whether mean body length differs samples. form following null alternative hypotheses:\\(H_0\\): mean body length differ two groups \\((\\mu = \\mu G)\\)\\(H_1\\): mean body length differ two groups \\((\\mu \\neq \\mu G)\\)use two-sample, two-tailed t-test see can reject null hypothesis.use two-sample test now two samples.use two-tailed t-test want know data suggest true (population) means different one another rather one mean specifically bigger smaller .‚Äôre using Student‚Äôs t-test sample sizes big ‚Äôre assuming parent populations equal variance (can check later).data stored file data/tidy/CS1-twosample.csv.Let‚Äôs read data quick look first rows see data structured.tidyversebase RPython","code":"\nrivers <- read_csv(\"data/tidy/CS1-twosample.csv\")\n\nrivers## # A tibble: 68 √ó 3\n##       id river   length\n##    <dbl> <chr>    <dbl>\n##  1     1 Guanapo   19.1\n##  2     2 Guanapo   23.3\n##  3     3 Guanapo   18.2\n##  4     4 Guanapo   16.4\n##  5     5 Guanapo   19.7\n##  6     6 Guanapo   16.6\n##  7     7 Guanapo   17.5\n##  8     8 Guanapo   19.9\n##  9     9 Guanapo   19.1\n## 10    10 Guanapo   18.8\n## # ‚Ä¶ with 58 more rows\nrivers_r <- read.csv(\"data/tidy/CS1-twosample.csv\")\n\nhead(rivers_r)##   id   river length\n## 1  1 Guanapo   19.1\n## 2  2 Guanapo   23.3\n## 3  3 Guanapo   18.2\n## 4  4 Guanapo   16.4\n## 5  5 Guanapo   19.7\n## 6  6 Guanapo   16.6rivers_py = pd.read_csv(\"data/tidy/CS1-twosample.csv\")\n\nrivers_py.head()##    id    river  length\n## 0   1  Guanapo    19.1\n## 1   2  Guanapo    23.3\n## 2   3  Guanapo    18.2\n## 3   4  Guanapo    16.4\n## 4   5  Guanapo    19.7"},{"path":"cs1-students-t-test.html","id":"cs1-students-sumvisual","chapter":"5 Student‚Äôs t-test","heading":"5.3 Summarise and visualise","text":"Let‚Äôs first summarise data.tidyverseThis gives us standard summary statistics, case one group (Aripo Guanapo), might helpful get summary statistics per group. One way using get_summary_stats() function rstatix library.don‚Äôt need summary statistics id column, un-select . group data river get summary stats:Numbers might always give best insight data, also visualise data:base RThis gives us standard summary statistics, case one group (Aripo Guanapo), might helpful get summary statistics per group. can base R using aggregate() function.first argument defines variable used (length) grouping (river)second argument data frame usedThe third argument defines function applied across subsets (case ‚Äôs summary() function)Numbers might always give best insight data, also visualise data:can use similar notation summary statistics (length ~ river), box plot created per group.PythonThis gives us standard summary statistics, case one group (Aripo Guanapo), might helpful get summary statistics per group. use pd.groupby() function group river. want summary statistics length variable, specify well:Numbers might always give best insight data, also visualise data:box plot appear suggest two samples different means, moreover guppies Guanapo may smaller guppies Aripo. isn‚Äôt immediately obvious two populations don‚Äôt equal variances though (box plots quite right tool ), plough . ever said statistics glamorous?","code":"\nsummary(rivers)##        id           river               length     \n##  Min.   : 1.00   Length:68          Min.   :11.20  \n##  1st Qu.:17.75   Class :character   1st Qu.:18.40  \n##  Median :34.50   Mode  :character   Median :19.30  \n##  Mean   :34.50                      Mean   :19.46  \n##  3rd Qu.:51.25                      3rd Qu.:20.93  \n##  Max.   :68.00                      Max.   :26.40\n# get common summary stats for the length column\nrivers %>% \n  select(-id) %>% \n  group_by(river) %>% \n  get_summary_stats(type = \"common\")## # A tibble: 2 √ó 11\n##   river   variable     n   min   max median   iqr  mean    sd    se    ci\n##   <chr>   <chr>    <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n## 1 Aripo   length      39  17.5  26.4   20.1   2.2  20.3  1.78 0.285 0.577\n## 2 Guanapo length      29  11.2  23.3   18.8   2.2  18.3  2.58 0.48  0.983\nrivers %>% \n  ggplot(aes(x = river, y = length)) +\n  geom_boxplot()\nsummary(rivers)##        id           river               length     \n##  Min.   : 1.00   Length:68          Min.   :11.20  \n##  1st Qu.:17.75   Class :character   1st Qu.:18.40  \n##  Median :34.50   Mode  :character   Median :19.30  \n##  Mean   :34.50                      Mean   :19.46  \n##  3rd Qu.:51.25                      3rd Qu.:20.93  \n##  Max.   :68.00                      Max.   :26.40\naggregate(length ~ river,\n          data = rivers_r,\n          summary)##     river length.Min. length.1st Qu. length.Median length.Mean length.3rd Qu.\n## 1   Aripo    17.50000       19.10000      20.10000    20.33077       21.30000\n## 2 Guanapo    11.20000       17.50000      18.80000    18.29655       19.70000\n##   length.Max.\n## 1    26.40000\n## 2    23.30000\nboxplot(length ~ river,\n        data = rivers_r)rivers_py.describe()##              id     length\n## count  68.00000  68.000000\n## mean   34.50000  19.463235\n## std    19.77372   2.370081\n## min     1.00000  11.200000\n## 25%    17.75000  18.400000\n## 50%    34.50000  19.300000\n## 75%    51.25000  20.925000\n## max    68.00000  26.400000rivers_py.groupby(\"river\")[\"length\"].describe()##          count       mean       std   min   25%   50%   75%   max\n## river                                                            \n## Aripo     39.0  20.330769  1.780620  17.5  19.1  20.1  21.3  26.4\n## Guanapo   29.0  18.296552  2.584636  11.2  17.5  18.8  19.7  23.3(\n  ggplot(rivers_py, aes(x = \"river\", y = \"length\"))\n  + geom_boxplot()\n)"},{"path":"cs1-students-t-test.html","id":"assumptions-4","chapter":"5 Student‚Äôs t-test","heading":"5.4 Assumptions","text":"order use Student‚Äôs t-test (results strictly valid) make three assumptions:parent distributions samples taken normally distributed (lead sample data normally distributed ).data point samples independent others.parent distributions variance.example first assumption can ignored sample sizes large enough (maths, Aripo containing 39 Guanapo 29 samples). samples smaller use tests previous section.second point can nothing unless know data collected, ignore .third point regarding equality variance can tested using either Bartlett‚Äôs test (samples normally distributed) Levene‚Äôs test (samples normally distributed).gets bit trickier. Although don‚Äôt care samples normally distributed t-test valid (sample size big enough compensate), need know normally distributed order decide variance test use.perform Shapiro-Wilk test samples separately.tidyverse\ncan use group_by() function group data river, perform Shapiro-Wilk test length measurements:base R\ncan , need convert data format data split river:Now ‚Äôve separated data river can perform Shapiro-Wilk test:Python\nfirst need split data river.code bit convoluted perhaps efficient way ‚Äôm aware . Anyway, can groupby() function pandas. Next, select length measurements use .apply() function apply stats.shapiro() test group. returns two values per group: W-statistic Shapiro-Wilk test uses , value ‚Äôre interested , p-value. Lastly,use .reset_index() function repeat grouping name.can see whilst Guanapo data probably normally distributed (p = 0.1764 > 0.05), Aripo data unlikely normally distributed (p = 0.02802 < 0.05). Remember p-value gives probability observing sample parent population actually normally distributed.Shapiro-Wilk test quite sensitive sample size. means large sample even small deviations normality cause sample fail test, whereas smaller samples allowed pass much larger deviations. Aripo data nearly 40 points compared Guanapo data much easier Aripo sample fail compared Guanapo data.","code":"\n# group data by river and perform test\nrivers %>% \n  group_by(river) %>% \n  shapiro_test(length)## # A tibble: 2 √ó 4\n##   river   variable statistic      p\n##   <chr>   <chr>        <dbl>  <dbl>\n## 1 Aripo   length       0.936 0.0280\n## 2 Guanapo length       0.949 0.176\n# create a new object (a list) that contains the unstacked data\nuns_rivers <- unstack(rivers_r, select = -id, form = length ~ river)\n# have a look at the data\nuns_rivers\nshapiro.test(uns_rivers$Aripo)## \n##  Shapiro-Wilk normality test\n## \n## data:  uns_rivers$Aripo\n## W = 0.93596, p-value = 0.02802\nshapiro.test(uns_rivers$Guanapo)## \n##  Shapiro-Wilk normality test\n## \n## data:  uns_rivers$Guanapo\n## W = 0.94938, p-value = 0.1764rivers_py.groupby(\"river\")[\"length\"] \\\n.apply(lambda x: pd.Series(stats.shapiro(x), index=['W-stat','p-value'])) \\\n.reset_index()##      river  level_1    length\n## 0    Aripo   W-stat  0.935958\n## 1    Aripo  p-value  0.028023\n## 2  Guanapo   W-stat  0.949384\n## 3  Guanapo  p-value  0.176420"},{"path":"cs1-students-t-test.html","id":"exercise-qq-rivers","chapter":"5 Student‚Äôs t-test","heading":"5.5 Exercise: Q-Q plots rivers","text":"Exercise 5.1  Q-Q plots rivers dataCreate Q-Q plots two samples discuss neighbour see light results Shapiro-Wilk test.tidyversebase RPyhonThe Q-Q plots show opposite found Shapiro-Wilk tests: data Aripo look pretty normally distributed, whereas assumption normality Guanapo data less certain.? Well, conservative state confident data either group normally distributed. perfectly reasonable conclusion.","code":"\n# we group the data by river\n# then create a panel per river\n# containing the Q-Q plot for that river\nrivers %>% \n  ggplot(aes(sample = length)) +\n  stat_qq() +\n  stat_qq_line(colour = \"red\") +\n  facet_wrap(facets = vars(river))\npar(mfrow=c(1,2))\nqqnorm(uns_rivers$Aripo, main = \"Aripo\")\nqqline(uns_rivers$Aripo, col = \"red\")\n\nqqnorm(uns_rivers$Guanapo, main = \"Guanapo\")\nqqline(uns_rivers$Guanapo, col = \"red\")(\n  ggplot(rivers_py, aes(sample = \"length\"))\n  + stat_qq()\n  + stat_qq_line(colour = \"red\")\n  + facet_wrap(\"river\")\n)"},{"path":"cs1-students-t-test.html","id":"equality-of-variance","chapter":"5 Student‚Äôs t-test","heading":"5.6 Equality of variance","text":"Remember statistical tests provide answers, merely suggest patterns. Human interpretation still crucial aspect .reason ‚Äôre checking equality variance (also referred homogeneity variance) many statistical tests assume spread data within different parental populations (case, two) .indeed case, data equal spread well.Shapiro-Wilk test Q-Q plots shown data might normal enough (although opposite directions!) order test equality variance use Levene‚Äôs test.tidyverse\nfunction use levene_test() rstatix library.takes data form formula follows:key bit information p column. p-value (0.1876) test.base R\nLevene‚Äôs test included default R packages may require installation additional package called car (Companion Applied Regression).install car package, run following command console:Alternatively, go Tools > Install packages‚Ä¶ > Packages, type car press InstallWe can now perform Levene‚Äôs test:Ignore warning might get coercion factors (test needs create grouped variables work R versions 4.x onwards read data factors).key bit information 3rd line text Pr(>F). p-value test.Python\nLevene‚Äôs test included stats module scipy. requires two vectors input, need subset data river:p-value tells us probability observing two samples come distributions variance. probability greater arbitrary significance level 0.05 can somewhat confident necessary assumptions carrying Student‚Äôs t-test two samples valid. (woohoo!)","code":"\nrivers %>% \n  levene_test(length ~ river)## # A tibble: 1 √ó 4\n##     df1   df2 statistic     p\n##   <int> <int>     <dbl> <dbl>\n## 1     1    66      1.77 0.188\ninstall.packages(\"car\")\nleveneTest(length ~ river, data = rivers)## Levene's Test for Homogeneity of Variance (center = median)\n##       Df F value Pr(>F)\n## group  1  1.7732 0.1876\n##       66aripo = rivers_py.query('river == \"Aripo\"')[\"length\"]\nguanapo = rivers_py.query('river == \"Guanapo\"')[\"length\"]\n\nstats.levene(aripo, guanapo)## LeveneResult(statistic=1.7731837331911642, pvalue=0.18756940068805075)"},{"path":"cs1-students-t-test.html","id":"bartletts-test","chapter":"5 Student‚Äôs t-test","heading":"5.6.1 Bartlett‚Äôs test","text":"wanted carry Bartlett‚Äôs test (.e.¬†data sufficiently normally distributed) done:tidyverse\nuse bartlett.test() base R. Surprisingly, rstatix package built-equivalent.wanted get output Bartlett test tidy format, following, take rivers data set pipe bartlett.test() function. Note need define data using dot (.), first input bartlett.test() data. pipe output tidy() function, part broom library, kindly converts output tidy format. Handy!base RThe relevant p-value given 3rd line.Python\n‚Äôve already subset data guanapo aripo, vectors contain data.","code":"\n# load the broom package\nlibrary(broom)\n\n# perform Bartlett's test on the data and tidy\nrivers %>% \n  bartlett.test(length ~ river,\n                data = .) %>% \n  tidy()## # A tibble: 1 √ó 4\n##   statistic p.value parameter method                                   \n##       <dbl>   <dbl>     <dbl> <chr>                                    \n## 1      4.47  0.0344         1 Bartlett test of homogeneity of variances\nbartlett.test(length ~ river, data = rivers_r)## \n##  Bartlett test of homogeneity of variances\n## \n## data:  length by river\n## Bartlett's K-squared = 4.4734, df = 1, p-value = 0.03443stats.bartlett(aripo, guanapo)## BartlettResult(statistic=4.4734366516240165, pvalue=0.03442568304468286)"},{"path":"cs1-students-t-test.html","id":"implement-and-interpret-the-test","chapter":"5 Student‚Äôs t-test","heading":"5.7 Implement and interpret the test","text":"case ‚Äôre ignoring fact data normal enough, according Shapiro-Wilk test. However, entirely naughty, sample sizes pretty large t-test also pretty robust case, can perform t-test. Remember, allowed variances two groups (Aripo Guanapo) equal.Perform two-sample, two-tailed, t-test:tidyverseHere following:take data set pipe t_test() functionThe t_test() function takes formula format variable ~ categoryAgain alternative two.sided prior knowledge whether alternative greater lessThe last argument says whether variance two samples can assumed equal (Student‚Äôs t-test) unequal (Welch‚Äôs t-test), interpret results?first 5 columns give information variable (.y.), groups sample size groupThe statistic column gives t-value 3.8433 (need reporting)df column tell us 66 degrees freedom (need reporting)p column gives us p-value 0.0002754base RThe first argument must formula format: variables ~ categoryThe second argument must name data frameThe third argument gives type alternative hypothesis must one two.sided, greater lessThe fourth argument says whether variance two samples can assumed equal (Student‚Äôs t-test) unequal (Welch‚Äôs t-test), interpret results?1st line gives name test 2nd line reminds data set called, variables used.3rd line contains three key outputs test:\ncalculated t-value 3.8433 (need reporting)\n66 degrees freedom (need reporting)\np-value 0.0002754.\ncalculated t-value 3.8433 (need reporting)66 degrees freedom (need reporting)p-value 0.0002754.4th line simply states alternative hypothesis terms difference two sample means (testing two sample means different equivalent testing whether difference means equal zero).5th 6th lines give 95th confidence interval (don‚Äôt need know ).7th, 8th 9th lines give sample means group (20.33077 Aripo 18.29655 Guanapo) found earlier.PythonAgain, p-value ‚Äôre interested . Since p-value small (much smaller standard significance level) choose say ‚Äúunlikely two samples came parent distribution can reject null hypothesis‚Äù state :Student‚Äôs t-test indicated mean body length male guppies Guanapo river (18.29 mm) differs significantly mean body length male guppies Aripo river (20.33 mm) (t = 3.8433, df = 66, p = 0.0003).Now ‚Äôs conversation starter.","code":"\n# two-sample, two-tailed t-test\nrivers %>% \n  t_test(length ~ river,\n         alternative = \"two.sided\",\n         var.equal = TRUE)## # A tibble: 1 √ó 8\n##   .y.    group1 group2     n1    n2 statistic    df        p\n## * <chr>  <chr>  <chr>   <int> <int>     <dbl> <dbl>    <dbl>\n## 1 length Aripo  Guanapo    39    29      3.84    66 0.000275\nt.test(length ~ river, data = rivers_r,\n       alternative = \"two.sided\",\n       var.equal = TRUE)## \n##  Two Sample t-test\n## \n## data:  length by river\n## t = 3.8433, df = 66, p-value = 0.0002754\n## alternative hypothesis: true difference in means between group Aripo and group Guanapo is not equal to 0\n## 95 percent confidence interval:\n##  0.9774482 3.0909868\n## sample estimates:\n##   mean in group Aripo mean in group Guanapo \n##              20.33077              18.29655stats.ttest_ind(aripo, guanapo,\n                alternative = \"two-sided\",\n                equal_var = True)## Ttest_indResult(statistic=3.8432667461726275, pvalue=0.00027544021976337834)"},{"path":"cs1-students-t-test.html","id":"exercise-turtles","chapter":"5 Student‚Äôs t-test","heading":"5.8 Exercise: Turtles","text":"Exercise 5.2  Serum cholesterol concentrations turtlesUsing following data, test null hypothesis male female turtles mean serum cholesterol concentrations.Create tidy data frame save .csv fileWrite null alternative hypothesesImport dataSummarise visualise dataCheck assumptions (normality variance) using appropriate tests plotsPerform two-sample t-testWrite sentence summarises results foundWe‚Äôll stop asking manually create data files soon, ‚Äôs meant get think record data. ‚Äôre using tidy data format, variable (thing measure) column. observation row.means restructure data look like :Note isn‚Äôt id column identify observation. isn‚Äôt problem, long ‚Äôs clear observation independent.\\(H_0\\) : male mean \\(=\\) female mean\\(H_1\\) : male mean \\(\\neq\\) female meanLet‚Äôs load data (‚Äôve created .csv file earlier) explore data bit dive statistics.tidyverseLet‚Äôs summarise data (although visualisation probably much easier work ):visualise data:base Rand visualise data:Pythonand visualise data:always use plot summary assess three things:look like ‚Äôve loaded data correctly?\ntwo groups extreme values plots seem match data set, ‚Äôm happy haven‚Äôt done anything massively wrong .\ntwo groups extreme values plots seem match data set, ‚Äôm happy haven‚Äôt done anything massively wrong .think difference two groups?\nneed result formal test make sense given data, ‚Äôs important develop sense think going happen . Whilst ranges two groups suggests Female serum levels might higher males look things closely realise isn‚Äôt case. box plot shows median values two groups virtually identical backed summary statistics calculated: medians 224.1, means fairly close (225.7 vs 224.2). Based , fact 13 observations total surprised test came back showing difference groups.\nneed result formal test make sense given data, ‚Äôs important develop sense think going happen . Whilst ranges two groups suggests Female serum levels might higher males look things closely realise isn‚Äôt case. box plot shows median values two groups virtually identical backed summary statistics calculated: medians 224.1, means fairly close (225.7 vs 224.2). Based , fact 13 observations total surprised test came back showing difference groups.think assumptions?\nNormality looks bit worrying: whilst Male group appears nice symmetric (might normal), Female group appears quite skewed (since median much closer bottom top). ‚Äôll look carefully formal checks decided whether think data normal enough us use t-test.\nHomogeneity variance. stage spread data within group looks similar, potential skew Female group ‚Äôll want check assumptions carefully.\nNormality looks bit worrying: whilst Male group appears nice symmetric (might normal), Female group appears quite skewed (since median much closer bottom top). ‚Äôll look carefully formal checks decided whether think data normal enough us use t-test.Homogeneity variance. stage spread data within group looks similar, potential skew Female group ‚Äôll want check assumptions carefully.NormalityLet‚Äôs look normality groups separately. several ways getting serum values Male Female groups separately. come splitting data. Afterwards use Shapiro-Wilk (‚Äòformal‚Äô test), followed Q-Q plots (much informative).tidyversebase R\ncan use unstack() function split data, access relevant values.can see data split sex.PythonThe p-values Shapiro-Wilk tests non-significant suggests data normal enough. bit surprising given saw box plot two bits information can use reassure us.p-value Female group smaller Male group (suggesting Female group closer non-normal Male group) makes sense based visual observations.Shapiro-Wilk test generally quite relaxed normality small sample sizes (notoriously strict large sample sizes). group 6 data points , data actually really, really skewed distribution. Given Female group 6 data points , ‚Äôs surprising Shapiro-Wilk test came back saying everything OK.Given caveats Shapiro-Wilk test (‚Äôll stop mentioning now, think ‚Äôve made opinion clear ;)), let‚Äôs look Q-Q plots.tidyversebase RPythonThe results Q-Q plots echo ‚Äôve already seen Shapiro-Wilk analyses. normality data Male group doesn‚Äôt look bad whereas Female group looks somewhat dodgy.Overall, assumption normality data doesn‚Äôt appear well met , bear mind data points group might just seeing pattern data due random chance rather underlying populations actually normally distributed. Personally, though ‚Äôd edge towards non-normal .Homogeneity VarianceIt‚Äôs clear whether data normal , isn‚Äôt clear test use . sensible approach hope agree (fingers crossed!). err side caution assume normal, potentially throwing away statistical power (later).tidyverse\nBartlett‚Äôs test gives us:Levene‚Äôs test gives us:base R\nBartlett‚Äôs test gives us:Levene‚Äôs test gives us:Python\nBartlett‚Äôs test gives us:Levene‚Äôs test gives us:good news Levene Bartlett agree homogeneity variance two groups (thank goodness, ‚Äôs one less thing worry !).Overall, means ‚Äôre sure normality, homogeneity variance pretty good.result Bartlett test know can carry two-sample Student‚Äôs t-test. variances two groups equal, ‚Äôd perform Welch‚Äôs t-test.tidyversebase RPythonWith p-value 0.544, test tells insufficient evidence suggest means two groups different. suitable summary sentence :Student‚Äôs two-sample t-test indicated mean serum cholesterol level differ significantly Male Female turtles (t = 0.627, df = 11, p = 0.544).reality, ambiguous normality assumption assessment, data set actually carry two different tests; two-sample t-test equal variance Mann-Whitney U test. agreed wouldn‚Äôt matter much one reported (‚Äôd personally report short sentence say ‚Äôm wasn‚Äôt clear whether assumption normality met), acceptable report just one.","code":"\nturtle## # A tibble: 13 √ó 2\n##    serum sex   \n##    <dbl> <chr> \n##  1  220. Male  \n##  2  219. Male  \n##  3  230. Male  \n##  4  229. Male  \n##  5  222  Male  \n##  6  224. Male  \n##  7  226. Male  \n##  8  223. Female\n##  9  222. Female\n## 10  230. Female\n## 11  224. Female\n## 12  224. Female\n## 13  231. Female\n# load the data\nturtle <- read_csv(\"data/tidy/CS1-turtle.csv\")## Rows: 13 Columns: 2\n## ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n## Delimiter: \",\"\n## chr (1): sex\n## dbl (1): serum\n## \n## ‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n## ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n# and have a look\nturtle## # A tibble: 13 √ó 2\n##    serum sex   \n##    <dbl> <chr> \n##  1  220. Male  \n##  2  219. Male  \n##  3  230. Male  \n##  4  229. Male  \n##  5  222  Male  \n##  6  224. Male  \n##  7  226. Male  \n##  8  223. Female\n##  9  222. Female\n## 10  230. Female\n## 11  224. Female\n## 12  224. Female\n## 13  231. Female\n# create summary statistics for each group\nturtle %>% \n  group_by(sex) %>% \n  get_summary_stats(type = \"common\")## # A tibble: 2 √ó 11\n##   sex    variable     n   min   max median   iqr  mean    sd    se    ci\n##   <chr>  <chr>    <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n## 1 Female serum        6  222.  231.   224.  5.22  226.  3.87  1.58  4.06\n## 2 Male   serum        7  219.  230.   224.  6.6   224.  4.26  1.61  3.94\n# visualise the data\nturtle %>% \n  ggplot(aes(x = sex, y = serum)) +\n  geom_boxplot()\n# load the data\nturtle_r <- read.csv(\"data/tidy/CS1-turtle.csv\")\n\n# and have a look\nhead(turtle_r)##   serum  sex\n## 1 220.1 Male\n## 2 218.6 Male\n## 3 229.6 Male\n## 4 228.8 Male\n## 5 222.0 Male\n## 6 224.1 Male\n# visualise the data\nboxplot(serum ~ sex , data = turtle_r)turtle_py = pd.read_csv(\"data/tidy/CS1-turtle.csv\")\n\nturtle_py.describe()##             serum\n## count   13.000000\n## mean   224.900000\n## std      3.978274\n## min    218.600000\n## 25%    222.000000\n## 50%    224.100000\n## 75%    228.800000\n## max    230.800000(\n  ggplot(turtle_py, aes(x = \"sex\",\n                        y = \"serum\"))\n  + geom_boxplot()\n)\n# perform Shapiro-Wilk test on each group\nturtle %>% \n  group_by(sex) %>% \n  shapiro_test(serum)## # A tibble: 2 √ó 4\n##   sex    variable statistic     p\n##   <chr>  <chr>        <dbl> <dbl>\n## 1 Female serum        0.842 0.135\n## 2 Male   serum        0.944 0.674\nuns_turtle_r <- unstack(turtle_r, serum ~ sex)\n\nuns_turtle_r## $Female\n## [1] 223.4 221.5 230.2 224.3 223.8 230.8\n## \n## $Male\n## [1] 220.1 218.6 229.6 228.8 222.0 224.1 226.5\nshapiro.test(uns_turtle_r$Male)## \n##  Shapiro-Wilk normality test\n## \n## data:  uns_turtle_r$Male\n## W = 0.94392, p-value = 0.6743\nshapiro.test(uns_turtle_r$Female)## \n##  Shapiro-Wilk normality test\n## \n## data:  uns_turtle_r$Female\n## W = 0.84178, p-value = 0.1349turtle_male = turtle_py.query('sex == \"Male\"')[\"serum\"]\nturtle_female = turtle_py.query('sex == \"Female\"')[\"serum\"]stats.shapiro(turtle_male)## ShapiroResult(statistic=0.9439237713813782, pvalue=0.6742751598358154)stats.shapiro(turtle_female)## ShapiroResult(statistic=0.8417852520942688, pvalue=0.1348712146282196)\n# create Q-Q plots for both groups\nturtle %>% \n  ggplot(aes(sample = serum)) +\n  stat_qq() +\n  stat_qq_line(colour = \"red\") +\n  facet_wrap(facets = vars(sex))\npar(mfrow=c(1,2))\nqqnorm(uns_turtle_r$Female, main = \"Female\")\nqqline(uns_turtle_r$Female, col = \"red\")\nqqnorm(uns_turtle_r$Male, main = \"Male\")\nqqline(uns_turtle_r$Male, col = \"red\")# create Q-Q plots for both groups\n(\n  ggplot(turtle_py, aes(sample = \"serum\"))\n  + stat_qq()\n  + stat_qq_line(colour = \"red\")\n  + facet_wrap(\"sex\")\n)\n# perform Bartlett's test\nbartlett.test(serum ~ sex,\n              data = turtle)## \n##  Bartlett test of homogeneity of variances\n## \n## data:  serum by sex\n## Bartlett's K-squared = 0.045377, df = 1, p-value = 0.8313\n# perform Levene's test\nturtle %>% \n  levene_test(serum ~ sex)## # A tibble: 1 √ó 4\n##     df1   df2 statistic     p\n##   <int> <int>     <dbl> <dbl>\n## 1     1    11     0.243 0.631\nbartlett.test(serum ~ sex, turtle_r)## \n##  Bartlett test of homogeneity of variances\n## \n## data:  serum by sex\n## Bartlett's K-squared = 0.045377, df = 1, p-value = 0.8313\n# load if needed\n# library(car)\n\nleveneTest(serum ~ sex, turtle_r)## Levene's Test for Homogeneity of Variance (center = median)\n##       Df F value Pr(>F)\n## group  1  0.2434 0.6315\n##       11stats.bartlett(turtle_male, turtle_female)## BartlettResult(statistic=0.0453770725135282, pvalue=0.8313121829253811)stats.levene(turtle_male, turtle_female)## LeveneResult(statistic=0.24341796609304578, pvalue=0.6314503568954707)\n# perform two-sample t-test\nturtle %>% \n  t_test(serum ~ sex,\n         alternative = \"two.sided\",\n         var.equal = TRUE)## # A tibble: 1 √ó 8\n##   .y.   group1 group2    n1    n2 statistic    df     p\n## * <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl> <dbl>\n## 1 serum Female Male       6     7     0.627    11 0.544\nt.test(serum ~ sex,\n       data = turtle_r,\n       alternative = \"two.sided\",\n       var.equal = TRUE)## \n##  Two Sample t-test\n## \n## data:  serum by sex\n## t = 0.62681, df = 11, p-value = 0.5436\n## alternative hypothesis: true difference in means between group Female and group Male is not equal to 0\n## 95 percent confidence interval:\n##  -3.575759  6.423378\n## sample estimates:\n## mean in group Female   mean in group Male \n##             225.6667             224.2429stats.ttest_ind(turtle_male, turtle_female,\n                alternative = \"two-sided\",\n                equal_var = True)## Ttest_indResult(statistic=-0.6268108404512706, pvalue=0.543572996867541)"},{"path":"cs1-students-t-test.html","id":"data","chapter":"5 Student‚Äôs t-test","heading":"5.8.1 Data","text":"‚Äôll stop asking manually create data files soon, ‚Äôs meant get think record data. ‚Äôre using tidy data format, variable (thing measure) column. observation row.means restructure data look like :Note isn‚Äôt id column identify observation. isn‚Äôt problem, long ‚Äôs clear observation independent.","code":"\nturtle## # A tibble: 13 √ó 2\n##    serum sex   \n##    <dbl> <chr> \n##  1  220. Male  \n##  2  219. Male  \n##  3  230. Male  \n##  4  229. Male  \n##  5  222  Male  \n##  6  224. Male  \n##  7  226. Male  \n##  8  223. Female\n##  9  222. Female\n## 10  230. Female\n## 11  224. Female\n## 12  224. Female\n## 13  231. Female"},{"path":"cs1-students-t-test.html","id":"hypotheses-2","chapter":"5 Student‚Äôs t-test","heading":"5.8.2 Hypotheses","text":"\\(H_0\\) : male mean \\(=\\) female mean\\(H_1\\) : male mean \\(\\neq\\) female mean","code":""},{"path":"cs1-students-t-test.html","id":"load-summarise-and-visualise-data","chapter":"5 Student‚Äôs t-test","heading":"5.8.3 Load, summarise and visualise data","text":"Let‚Äôs load data (‚Äôve created .csv file earlier) explore data bit dive statistics.tidyverseLet‚Äôs summarise data (although visualisation probably much easier work ):visualise data:base Rand visualise data:Pythonand visualise data:always use plot summary assess three things:look like ‚Äôve loaded data correctly?\ntwo groups extreme values plots seem match data set, ‚Äôm happy haven‚Äôt done anything massively wrong .\ntwo groups extreme values plots seem match data set, ‚Äôm happy haven‚Äôt done anything massively wrong .think difference two groups?\nneed result formal test make sense given data, ‚Äôs important develop sense think going happen . Whilst ranges two groups suggests Female serum levels might higher males look things closely realise isn‚Äôt case. box plot shows median values two groups virtually identical backed summary statistics calculated: medians 224.1, means fairly close (225.7 vs 224.2). Based , fact 13 observations total surprised test came back showing difference groups.\nneed result formal test make sense given data, ‚Äôs important develop sense think going happen . Whilst ranges two groups suggests Female serum levels might higher males look things closely realise isn‚Äôt case. box plot shows median values two groups virtually identical backed summary statistics calculated: medians 224.1, means fairly close (225.7 vs 224.2). Based , fact 13 observations total surprised test came back showing difference groups.think assumptions?\nNormality looks bit worrying: whilst Male group appears nice symmetric (might normal), Female group appears quite skewed (since median much closer bottom top). ‚Äôll look carefully formal checks decided whether think data normal enough us use t-test.\nHomogeneity variance. stage spread data within group looks similar, potential skew Female group ‚Äôll want check assumptions carefully.\nNormality looks bit worrying: whilst Male group appears nice symmetric (might normal), Female group appears quite skewed (since median much closer bottom top). ‚Äôll look carefully formal checks decided whether think data normal enough us use t-test.Homogeneity variance. stage spread data within group looks similar, potential skew Female group ‚Äôll want check assumptions carefully.","code":"\n# load the data\nturtle <- read_csv(\"data/tidy/CS1-turtle.csv\")## Rows: 13 Columns: 2\n## ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n## Delimiter: \",\"\n## chr (1): sex\n## dbl (1): serum\n## \n## ‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n## ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n# and have a look\nturtle## # A tibble: 13 √ó 2\n##    serum sex   \n##    <dbl> <chr> \n##  1  220. Male  \n##  2  219. Male  \n##  3  230. Male  \n##  4  229. Male  \n##  5  222  Male  \n##  6  224. Male  \n##  7  226. Male  \n##  8  223. Female\n##  9  222. Female\n## 10  230. Female\n## 11  224. Female\n## 12  224. Female\n## 13  231. Female\n# create summary statistics for each group\nturtle %>% \n  group_by(sex) %>% \n  get_summary_stats(type = \"common\")## # A tibble: 2 √ó 11\n##   sex    variable     n   min   max median   iqr  mean    sd    se    ci\n##   <chr>  <chr>    <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n## 1 Female serum        6  222.  231.   224.  5.22  226.  3.87  1.58  4.06\n## 2 Male   serum        7  219.  230.   224.  6.6   224.  4.26  1.61  3.94\n# visualise the data\nturtle %>% \n  ggplot(aes(x = sex, y = serum)) +\n  geom_boxplot()\n# load the data\nturtle_r <- read.csv(\"data/tidy/CS1-turtle.csv\")\n\n# and have a look\nhead(turtle_r)##   serum  sex\n## 1 220.1 Male\n## 2 218.6 Male\n## 3 229.6 Male\n## 4 228.8 Male\n## 5 222.0 Male\n## 6 224.1 Male\n# visualise the data\nboxplot(serum ~ sex , data = turtle_r)turtle_py = pd.read_csv(\"data/tidy/CS1-turtle.csv\")\n\nturtle_py.describe()##             serum\n## count   13.000000\n## mean   224.900000\n## std      3.978274\n## min    218.600000\n## 25%    222.000000\n## 50%    224.100000\n## 75%    228.800000\n## max    230.800000(\n  ggplot(turtle_py, aes(x = \"sex\",\n                        y = \"serum\"))\n  + geom_boxplot()\n)"},{"path":"cs1-students-t-test.html","id":"assumptions-5","chapter":"5 Student‚Äôs t-test","heading":"5.8.4 Assumptions","text":"NormalityLet‚Äôs look normality groups separately. several ways getting serum values Male Female groups separately. come splitting data. Afterwards use Shapiro-Wilk (‚Äòformal‚Äô test), followed Q-Q plots (much informative).tidyversebase R\ncan use unstack() function split data, access relevant values.can see data split sex.PythonThe p-values Shapiro-Wilk tests non-significant suggests data normal enough. bit surprising given saw box plot two bits information can use reassure us.p-value Female group smaller Male group (suggesting Female group closer non-normal Male group) makes sense based visual observations.Shapiro-Wilk test generally quite relaxed normality small sample sizes (notoriously strict large sample sizes). group 6 data points , data actually really, really skewed distribution. Given Female group 6 data points , ‚Äôs surprising Shapiro-Wilk test came back saying everything OK.Given caveats Shapiro-Wilk test (‚Äôll stop mentioning now, think ‚Äôve made opinion clear ;)), let‚Äôs look Q-Q plots.tidyversebase RPythonThe results Q-Q plots echo ‚Äôve already seen Shapiro-Wilk analyses. normality data Male group doesn‚Äôt look bad whereas Female group looks somewhat dodgy.Overall, assumption normality data doesn‚Äôt appear well met , bear mind data points group might just seeing pattern data due random chance rather underlying populations actually normally distributed. Personally, though ‚Äôd edge towards non-normal .Homogeneity VarianceIt‚Äôs clear whether data normal , isn‚Äôt clear test use . sensible approach hope agree (fingers crossed!). err side caution assume normal, potentially throwing away statistical power (later).tidyverse\nBartlett‚Äôs test gives us:Levene‚Äôs test gives us:base R\nBartlett‚Äôs test gives us:Levene‚Äôs test gives us:Python\nBartlett‚Äôs test gives us:Levene‚Äôs test gives us:good news Levene Bartlett agree homogeneity variance two groups (thank goodness, ‚Äôs one less thing worry !).Overall, means ‚Äôre sure normality, homogeneity variance pretty good.","code":"\n# perform Shapiro-Wilk test on each group\nturtle %>% \n  group_by(sex) %>% \n  shapiro_test(serum)## # A tibble: 2 √ó 4\n##   sex    variable statistic     p\n##   <chr>  <chr>        <dbl> <dbl>\n## 1 Female serum        0.842 0.135\n## 2 Male   serum        0.944 0.674\nuns_turtle_r <- unstack(turtle_r, serum ~ sex)\n\nuns_turtle_r## $Female\n## [1] 223.4 221.5 230.2 224.3 223.8 230.8\n## \n## $Male\n## [1] 220.1 218.6 229.6 228.8 222.0 224.1 226.5\nshapiro.test(uns_turtle_r$Male)## \n##  Shapiro-Wilk normality test\n## \n## data:  uns_turtle_r$Male\n## W = 0.94392, p-value = 0.6743\nshapiro.test(uns_turtle_r$Female)## \n##  Shapiro-Wilk normality test\n## \n## data:  uns_turtle_r$Female\n## W = 0.84178, p-value = 0.1349turtle_male = turtle_py.query('sex == \"Male\"')[\"serum\"]\nturtle_female = turtle_py.query('sex == \"Female\"')[\"serum\"]stats.shapiro(turtle_male)## ShapiroResult(statistic=0.9439237713813782, pvalue=0.6742751598358154)stats.shapiro(turtle_female)## ShapiroResult(statistic=0.8417852520942688, pvalue=0.1348712146282196)\n# create Q-Q plots for both groups\nturtle %>% \n  ggplot(aes(sample = serum)) +\n  stat_qq() +\n  stat_qq_line(colour = \"red\") +\n  facet_wrap(facets = vars(sex))\npar(mfrow=c(1,2))\nqqnorm(uns_turtle_r$Female, main = \"Female\")\nqqline(uns_turtle_r$Female, col = \"red\")\nqqnorm(uns_turtle_r$Male, main = \"Male\")\nqqline(uns_turtle_r$Male, col = \"red\")# create Q-Q plots for both groups\n(\n  ggplot(turtle_py, aes(sample = \"serum\"))\n  + stat_qq()\n  + stat_qq_line(colour = \"red\")\n  + facet_wrap(\"sex\")\n)\n# perform Bartlett's test\nbartlett.test(serum ~ sex,\n              data = turtle)## \n##  Bartlett test of homogeneity of variances\n## \n## data:  serum by sex\n## Bartlett's K-squared = 0.045377, df = 1, p-value = 0.8313\n# perform Levene's test\nturtle %>% \n  levene_test(serum ~ sex)## # A tibble: 1 √ó 4\n##     df1   df2 statistic     p\n##   <int> <int>     <dbl> <dbl>\n## 1     1    11     0.243 0.631\nbartlett.test(serum ~ sex, turtle_r)## \n##  Bartlett test of homogeneity of variances\n## \n## data:  serum by sex\n## Bartlett's K-squared = 0.045377, df = 1, p-value = 0.8313\n# load if needed\n# library(car)\n\nleveneTest(serum ~ sex, turtle_r)## Levene's Test for Homogeneity of Variance (center = median)\n##       Df F value Pr(>F)\n## group  1  0.2434 0.6315\n##       11stats.bartlett(turtle_male, turtle_female)## BartlettResult(statistic=0.0453770725135282, pvalue=0.8313121829253811)stats.levene(turtle_male, turtle_female)## LeveneResult(statistic=0.24341796609304578, pvalue=0.6314503568954707)"},{"path":"cs1-students-t-test.html","id":"implement-two-sample-t-test","chapter":"5 Student‚Äôs t-test","heading":"5.8.5 Implement two-sample t-test","text":"result Bartlett test know can carry two-sample Student‚Äôs t-test. variances two groups equal, ‚Äôd perform Welch‚Äôs t-test.tidyversebase RPythonWith p-value 0.544, test tells insufficient evidence suggest means two groups different. suitable summary sentence :Student‚Äôs two-sample t-test indicated mean serum cholesterol level differ significantly Male Female turtles (t = 0.627, df = 11, p = 0.544).","code":"\n# perform two-sample t-test\nturtle %>% \n  t_test(serum ~ sex,\n         alternative = \"two.sided\",\n         var.equal = TRUE)## # A tibble: 1 √ó 8\n##   .y.   group1 group2    n1    n2 statistic    df     p\n## * <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl> <dbl>\n## 1 serum Female Male       6     7     0.627    11 0.544\nt.test(serum ~ sex,\n       data = turtle_r,\n       alternative = \"two.sided\",\n       var.equal = TRUE)## \n##  Two Sample t-test\n## \n## data:  serum by sex\n## t = 0.62681, df = 11, p-value = 0.5436\n## alternative hypothesis: true difference in means between group Female and group Male is not equal to 0\n## 95 percent confidence interval:\n##  -3.575759  6.423378\n## sample estimates:\n## mean in group Female   mean in group Male \n##             225.6667             224.2429stats.ttest_ind(turtle_male, turtle_female,\n                alternative = \"two-sided\",\n                equal_var = True)## Ttest_indResult(statistic=-0.6268108404512706, pvalue=0.543572996867541)"},{"path":"cs1-students-t-test.html","id":"discussion-1","chapter":"5 Student‚Äôs t-test","heading":"5.8.6 Discussion","text":"reality, ambiguous normality assumption assessment, data set actually carry two different tests; two-sample t-test equal variance Mann-Whitney U test. agreed wouldn‚Äôt matter much one reported (‚Äôd personally report short sentence say ‚Äôm wasn‚Äôt clear whether assumption normality met), acceptable report just one.","code":""}]
